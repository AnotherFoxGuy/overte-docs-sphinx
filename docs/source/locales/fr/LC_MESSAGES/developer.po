# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, High Fidelity. © Copyright 2020, Vircadia.
# This file is distributed under the same license as the Vircadia Docs
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
msgid ""
msgstr ""
"Project-Id-Version: Vircadia Docs\n"
"Report-Msgid-Bugs-To: julian.g@posteo.de\n"
"POT-Creation-Date: 2021-07-08 21:24+0000\n"
"PO-Revision-Date: 2021-05-24 06:48+0000\n"
"Last-Translator: Michael van Haarlem <michaelvanhaarlem@gmail.com>\n"
"Language: fr\n"
"Language-Team: French <https://weblate.vircadia.dev/projects/vircadia-"
"documentation/developer/fr/>\n"
"Plural-Forms: nplurals=2; plural=n > 1\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/developer.rst:3
msgid "Developer"
msgstr "Développeur"

#: ../../source/developer.rst:5
#, fuzzy
msgid ""
"Developer information such as how to build the project from source, "
"develop, or technically manage it can be found `here "
"<https://docs.vircadia.dev/>`_."
msgstr ""
"Les informations destinées aux développeurs, telles que la manière de "
"compiler le projet à partir de la source, de le développer ou de le gérer"
" techniquement, peuvent être trouvées ici."

#~ msgid "git clone https://github.com/kasenvr/project-athena.git"
#~ msgstr ""

#~ msgid "Last Updated on April 11, 2020"
#~ msgstr ""

#~ msgid "Last Updated on December 21, 2019"
#~ msgstr "Dernière mise à jour le 21 décembre 2019"

#~ msgid ""
#~ "Download the Android Studio installer "
#~ "and run it. Once installed, at the"
#~ " welcome screen, click Configure in "
#~ "the lower right corner and select "
#~ "SDK Manager."
#~ msgstr ""
#~ "Téléchargez le programme d'installation "
#~ "d'Android Studio et lancez-le. Une "
#~ "fois installé, dans l'écran de "
#~ "bienvenue, cliquez sur Configure dans le"
#~ " coin inférieur droit et sélectionnez "
#~ "SDK Manager."

#~ msgid ""
#~ "Still in the SDK Tools tab, click"
#~ " Show Package Details. Select CMake "
#~ "3.6.4. Do this even if you have"
#~ " a separate CMake installation."
#~ msgstr ""
#~ "Toujours dans l'onglet SDK Tools, "
#~ "cliquez sur Show Package Details. "
#~ "Sélectionnez CMake 3.6.4. Faites-le même"
#~ " si vous avez une installation "
#~ "séparée de CMake."

#~ msgid "Also, make sure the NDK installed version is 18 (or higher)."
#~ msgstr ""
#~ "Assurez-vous également que la version"
#~ " de NDK installée est bien la "
#~ "version 18 (ou supérieure)."

#~ msgid ""
#~ "The above code to suppress modules "
#~ "is not necessary, but will speed "
#~ "up the build process."
#~ msgstr ""
#~ "Le code de suppression des modules "
#~ "ci-dessus n'est pas nécessaire, mais "
#~ "il accélérera le processus de "
#~ "compilation."

#~ msgid "From the Build menu select Make Project"
#~ msgstr "Dans le menu Build, sélectionnez Make Project"

#~ msgid "export HIFI_VCPKG_BASE=/path/to/directory"
#~ msgstr "export HIFI_VCPKG_BASE=/path/to/directory"

#~ msgid "Ubuntu 18.04 only"
#~ msgstr "Ubuntu 18.04 seulement"

#~ msgid ""
#~ "In Ubuntu 18.04 there is a problem"
#~ " related with NVidia driver library "
#~ "version."
#~ msgstr ""
#~ "Dans Ubuntu 18.04, il y a un "
#~ "problème lié à la version de la"
#~ " bibliothèque de pilotes NVidia."

#~ msgid "It can be worked around following these steps:"
#~ msgstr "Il peut être contourné en suivant ces étapes :"

#~ msgid ""
#~ "Uninstall incompatible nvtt libraries:<br "
#~ "/>sudo apt-get remove libnvtt2 "
#~ "libnvtt-dev"
#~ msgstr ""
#~ "Désinstallez les bibliothèques nvtt "
#~ "incompatibles:<br />sudo apt-get remove "
#~ "libnvtt2 libnvtt-dev"

#~ msgid "Install libssl1.0-dev:<br />sudo apt-get -y install libssl1.0-dev"
#~ msgstr "Installez libssl1.0-dev:<br />sudo apt-get -y install libssl1.0-dev"

#~ msgid ""
#~ "Clone castano nvidia-texture-tools:<br "
#~ "/>git clone https://github.com/castano/nvidia-"
#~ "texture-tools<br />cd nvidia-texture-tools/"
#~ msgstr ""
#~ "Clonez castano nvidia-texture-tools:<br "
#~ "/>git clone https://github.com/castano/nvidia-"
#~ "texture-tools<br />cd nvidia-texture-tools/"

#~ msgid "Make these changes in repo:"
#~ msgstr "Apporter ces changements dans les référentiels :"

#~ msgid "In file VERSION set 2.2.1"
#~ msgstr "Dans le fichier VERSION fixez à 2.2.1"

#~ msgid "In file configure:"
#~ msgstr "Dans le fichier configure :"

#~ msgid "set build=\"release\""
#~ msgstr "mettez build=\"release\""

#~ msgid "set -DNVTT_SHARED=1"
#~ msgstr "mettez -DNVTT_SHARED=1"

#~ msgid ""
#~ "Configure, build and install:<br "
#~ "/>./configure<br />make<br />sudo make install"
#~ msgstr ""
#~ "Configurez, compilez and installez:<br "
#~ "/>./configure<br />make<br />sudo make install"

#~ msgid ""
#~ "Link compiled files:<br />sudo ln -s "
#~ "/usr/local/lib/libnvcore.so /usr/lib/libnvcore.so<br "
#~ "/>sudo ln -s /usr/local/lib/libnvimage.so "
#~ "/usr/lib/libnvimage.so<br />sudo ln -s "
#~ "/usr/local/lib/libnvmath.so /usr/lib/libnvmath.so<br "
#~ "/>sudo ln -s /usr/local/lib/libnvtt.so "
#~ "/usr/lib/libnvtt.so"
#~ msgstr ""
#~ "Reliez les fichiers compilés:<br />sudo "
#~ "ln -s /usr/local/lib/libnvcore.so "
#~ "/usr/lib/libnvcore.so<br />sudo ln -s "
#~ "/usr/local/lib/libnvimage.so /usr/lib/libnvimage.so<br "
#~ "/>sudo ln -s /usr/local/lib/libnvmath.so "
#~ "/usr/lib/libnvmath.so<br />sudo ln -s "
#~ "/usr/local/lib/libnvtt.so /usr/lib/libnvtt.so"

#~ msgid ""
#~ "After running these steps you can "
#~ "run interface:<br />interface/interface"
#~ msgstr ""
#~ "Après avoir effectué ces étapes, vous"
#~ " pouvez lancer l'interface:<br "
#~ "/>interface/interface"

#~ msgid ""
#~ "If you do not already have a "
#~ "Python 3.x development environment installed,"
#~ " also check \"Python Development\" in "
#~ "this screen."
#~ msgstr ""
#~ "Si vous n'avez pas encore installé "
#~ "un environnement de développement Python "
#~ "3.x, cochez également \"Python Development\""
#~ " dans cet écran."

#~ msgid ""
#~ "If you already have Visual Studio "
#~ "installed and need to add Python, "
#~ "open the \"Add or remove programs\" "
#~ "control panel and find the \"Microsoft"
#~ " Visual Studio Installer\".  Select it "
#~ "and click \"Modify\".  In the installer,"
#~ " select \"Modify\" again, then check "
#~ "\"Python Development\" and allow the "
#~ "installer to apply the changes."
#~ msgstr ""
#~ "Si Visual Studio est déjà installé "
#~ "et que vous devez ajouter Python, "
#~ "ouvrez le panneau de configuration \"Add"
#~ " or remove programs\" et trouvez "
#~ "\"Microsoft Visual Studio Installer\". "
#~ "Sélectionnez-le et cliquez sur \"Modify\"."
#~ " Dans l'installateur, sélectionnez à "
#~ "nouveau \"Modify\", puis cochez \"Python "
#~ "Development\" et autorisez l'installateur à"
#~ " appliquer les modifications."

#~ msgid "Last Updated on August 24, 2020"
#~ msgstr "Dernière mise à jour le 24 août 2020"

#~ msgid "Last Updated on December 21, 2020"
#~ msgstr "Dernière mise à jour le 1er décembre 2020"

#~ msgid "Build OSX - additional instructions for OS X."
#~ msgstr "Compilation OSX - instructions supplémentaires pour OS X."

#~ msgid "git: >= 1.6"
#~ msgstr "git : >= 1.6"

#~ msgid "CMake:  3.9"
#~ msgstr "cmake : 3.9"

#~ msgid "Python: 3.6 or higher"
#~ msgstr "Python : 3.6 ou plus haut"

#~ msgid "Node.JS: >= 12.13.1 LTS"
#~ msgstr "Node.JS : >= 12.13.1 LTS"

#~ msgid "Bullet Physics Engine:  2.83"
#~ msgstr "Bullet Physics Engine : 2.83"

#~ msgid "glm:  0.9.8"
#~ msgstr "glm : 0.9.8"

#~ msgid "Oculus SDK:   1.11 (Windows) / 0.5 (Mac)"
#~ msgstr "Oculus SDK : 1.11 (Windows) / 0.5 (Mac)"

#~ msgid "OpenVR:   1.11.11 (Windows, Linux)"
#~ msgstr "OpenVR : 1.11.11 (Windows, Linux)"

#~ msgid "Polyvox:   0.2.1"
#~ msgstr "Polyvox : 0.2.1"

#~ msgid "QuaZip:   0.7.3"
#~ msgstr "QuaZip : 0.7.3"

#~ msgid "SDL2:   2.0.3"
#~ msgstr "SDL2 : 2.0.3"

#~ msgid "Intel Threading Building Blocks:   4.3"
#~ msgstr "Intel Threading Building Blocks : 4.3"

#~ msgid "vcpkg:"
#~ msgstr "vcpkg :"

#~ msgid "VHACD"
#~ msgstr "VHACD"

#~ msgid "nvtt:   2.1.1 (customized)"
#~ msgstr "nvtt : 2.1.1 (personnalisé)"

#~ msgid "cmake .. -DVCPKG_BUILD_TYPE=release"
#~ msgstr "cmake .. -DVCPKG_BUILD_TYPE=release"

#~ msgid "cmake .. -DVCPKG_BUILD_TYPE=debug"
#~ msgstr "cmake .. -DVCPKG_BUILD_TYPE=debug"

#~ msgid ""
#~ "Please read the general build guide "
#~ "for information on building other "
#~ "platforms. Only Android specific instructions"
#~ " are found in this file. Note "
#~ "that these instructions apply to "
#~ "building for the Oculus Quest 1."
#~ msgstr ""
#~ "Veuillez lire le guide général de "
#~ "compilation pour obtenir des informations "
#~ "sur la compilation pour autres "
#~ "plates-formes. Seules les instructions "
#~ "spécifiques à Android se trouvent dans"
#~ " ce fichier. Veuillez noter que ces"
#~ " instructions s'appliquent à la compilation"
#~ " pour Oculus Quest."

#~ msgid ""
#~ "Download the Android Studio installer "
#~ "and run it. Once installed, click "
#~ "File then Settings, expand Appearance &"
#~ " Behavior then expand System Settings "
#~ "and select Android SDK."
#~ msgstr ""

#~ msgid ""
#~ "Still in the SDK Tools tab, check"
#~ " off Show Package Details at the "
#~ "bottom. Select CMake 3.6.4. Do this "
#~ "even if you have a separate CMake"
#~ " installation.  Also, make sure the "
#~ "NDK installed version is 18 (or "
#~ "higher)."
#~ msgstr ""

#~ msgid ""
#~ "Now go back to File then Project"
#~ " Structure then under Project set the"
#~ " Android Gradle Plugin Version to "
#~ "3.2.1 and Gradle Version to 4.10.1."
#~ msgstr ""

#~ msgid ""
#~ "The Frame Player for both Android "
#~ "Phone and Oculus Quest is optional, "
#~ "so if you encounter problems with "
#~ "these during your build, you can "
#~ "skip them by adding these lines to"
#~ " gradle.properties"
#~ msgstr ""

#~ msgid ""
#~ "In the Project window click on the"
#~ " project you wish to build (i.e. "
#~ "\"questInterface\") then click Build in "
#~ "the top menu and choose Make "
#~ "Module 'questInterface'"
#~ msgstr ""

#~ msgid ""
#~ "By default this will build the "
#~ "\"debug\" apk, you can change this "
#~ "by opening the Build Variants window "
#~ "along the left side and select "
#~ "other build types such as \"release\"."
#~ msgstr ""

#~ msgid ""
#~ "Your newly build APK should reside "
#~ "in vircadia\\android\\apps\\questInterface\\release (if"
#~ " you chose release)."
#~ msgstr ""

#~ msgid "Set VIRCADIA_USE_PREBUILT_QT=1"
#~ msgstr "Définissez VIRCADIA_USE_PREBUILT_QT=1"

#~ msgid "Set HIFI_QT_BASE=/path/to/qt"
#~ msgstr "Définissez HIFI_QT_BASE=/path/to/qt"

#~ msgid ""
#~ "Qt must be installed in "
#~ "$HIFI_QT_BASE/$VIRCADIA_USE_QT_VERSION/qt5-install."
#~ msgstr ""
#~ "Qt doit être installé dans "
#~ "$HIFI_QT_BASE/$VIRCADIA_USE_QT_VERSION/qt5-install."

#~ msgid "Last Updated on August 26, 2020"
#~ msgstr "Dernière mise à jour le 26 août 2020"

#~ msgid ""
#~ "You will need version 10.12 of the"
#~ " OSX SDK for building, otherwise you"
#~ " may have crashing or other "
#~ "unintended issues due to the deprecation"
#~ " of OpenGL on OSX. You can get"
#~ " that SDK from here. You must "
#~ "copy it in to your Xcode SDK "
#~ "directory, e.g."
#~ msgstr ""
#~ "Vous aurez besoin de la version "
#~ "10.12 du SDK OSX pour la "
#~ "compilation, sinon vous risquez d'avoir "
#~ "un plantage ou d'autres problèmes "
#~ "involontaires dus à la dépréciation "
#~ "d'OpenGL sur OSX. Vous pouvez obtenir"
#~ " ce SDK ici. Vous devez le "
#~ "copier dans votre répertoire SDK Xcode,"
#~ " par exemple."

#~ msgid ""
#~ "If you don’t have Community or "
#~ "Professional edition of Visual Studio, "
#~ "download Visual Studio Community 2019. "
#~ "If you have Visual Studio 2017, "
#~ "you are not required to download "
#~ "Visual Studio 2019."
#~ msgstr ""
#~ "Si vous ne disposez pas de "
#~ "l'édition Community ou Professional de "
#~ "Visual Studio, téléchargez Visual Studio "
#~ "Community 2019. Si vous avez Visual "
#~ "Studio 2017, vous n'êtes pas obligé "
#~ "de télécharger Visual Studio 2019."

#~ msgid ""
#~ "On the right on the Summary "
#~ "toolbar, select the following components "
#~ "based on your Visual Studio version."
#~ msgstr ""

#~ msgid "If you're installing Visual Studio 2017"
#~ msgstr "Si vous installez Visual Studio 2017,"

#~ msgid "Windows 8.1 SDK and UCRT SDK"
#~ msgstr "Windows 8.1 SDK et UCRT SDK"

#~ msgid "VC++ 2015.3 v14.00 (v140) toolset for desktop"
#~ msgstr "VC++ 2015.3 v14.00 (v140) toolset for desktop"

#~ msgid "If you're installing Visual Studio 2019"
#~ msgstr "Si vous installez Visual Studio 2019,"

#~ msgid ""
#~ "Download the file named win64-x64 "
#~ "Installer from the CMake Website. You"
#~ " can access the installer on this "
#~ "3.15 Version page. During installation, "
#~ "make sure to check \"Add CMake to"
#~ " system PATH for all users\" when "
#~ "prompted."
#~ msgstr ""
#~ "Téléchargez le fichier nommé win64-x64 "
#~ "Installer sur le site web de "
#~ "CMake. Vous pouvez accéder à "
#~ "l'installateur sur cette page de la "
#~ "version 3.15. Lors de l'installation, "
#~ "assurez-vous de cocher \"Add CMake to"
#~ " system PATH for all users\" lorsque"
#~ " vous y êtes invité."

#~ msgid "Install version 10.15.0 LTS (or greater) of Node.JS and NPM."
#~ msgstr ""

#~ msgid ""
#~ "If you would like to compile Qt"
#~ " instead of using the precompiled "
#~ "package provided during CMake, you can"
#~ " do so now. Install version 5.12.3"
#~ " of Qt, as well as the "
#~ "following packages:"
#~ msgstr ""

#~ msgid "Qt 5.12.3"
#~ msgstr ""

#~ msgid "MSVC 2017 64-bit"
#~ msgstr ""

#~ msgid ""
#~ "Set \"Variable value\" to "
#~ "%QT_INSTALL_DIR%\\5.12.3\\msvc2017_64\\lib\\cmake, where "
#~ "%QT_INSTALL_DIR% is the directory you "
#~ "specified for Qt's installation. The "
#~ "default is C:\\Qt."
#~ msgstr ""

#~ msgid ""
#~ "Navigate to 'Edit the System Environment"
#~ " Variables' Through the start menu."
#~ msgstr ""
#~ "Naviguez sur 'Edit the System "
#~ "Environment Variables' via le menu de"
#~ " démarrage."

#~ msgid "Set \"Variable name\" to HIFI_VCPKG_BASE"
#~ msgstr "Définissez \"Variable name\" sur HIFI_VCPKG_BASE"

#~ msgid "Set \"Variable name\" to HIFI_VCPKG_BOOTSTRAP"
#~ msgstr "Définissez \"Variable name\" sur HIFI_VCPKG_BOOTSTRAP"

#~ msgid "If you're using Visual Studio 2017,"
#~ msgstr "Si vous utilisez Visual Studio 2017,"

#~ msgid "Run cmake .. -G \"Visual Studio 15 Win64\"."
#~ msgstr "Exécutez cmake .. -G \"Visual Studio 15 Win64\"."

#~ msgid "If you're using Visual Studio 2019,"
#~ msgstr "Si vous utilisez Visual Studio 2019,"

#~ msgid "Redownload the repository"
#~ msgstr "Téléchargez le référentiel"

#~ msgid ""
#~ "Remove CMakeCache.txt found in the "
#~ "%VIRCADIA_DIR%\\build directory.  Verify that "
#~ "your HIFI_VCPKG_BASE environment variable is"
#~ " set and pointing to the correct "
#~ "location. Verify that the file "
#~ "${HIFI_VCPKG_BASE}/installed/x64-windows/include/openssl/ssl.h "
#~ "exists."
#~ msgstr ""
#~ "Supprimez le fichier CMakeCache.txt qui "
#~ "se trouve dans le répertoire "
#~ "%VIRCADIA_DIR%\\build. Vérifiez que votre "
#~ "variable d'environnement HIFI_VCPKG_BASE est "
#~ "définie et qu'elle pointe vers le "
#~ "bon emplacement. Vérifiez que le fichier"
#~ " ${HIFI_VCPKG_BASE}/installed/x64-windows/include/openssl/ssl.h "
#~ "existe."

#~ msgid "7-zip"
#~ msgstr "7-zip"

#~ msgid "UAC Plug-in for Nullsoft - 0.2.4c"
#~ msgstr "Plug-in UAC pour Nullsoft - 0.2.4c"

#~ msgid "InetC Plug-in for Nullsoft - 1.0"
#~ msgstr "Plug-in InetC pour Nullsoft - 1.0"

#~ msgid "NSISpcre Plug-in for Nullsoft - 1.0"
#~ msgstr "NSISpcre Plug-in pour Nullsoft - 1.0"

#~ msgid "nsisSlideshow Plug-in for Nullsoft - 1.7"
#~ msgstr "nsisSlideshow Plug-in pour Nullsoft - 1.7"

#~ msgid "Nsisunz plug-in for Nullsoft"
#~ msgstr "Plug-in Nsisunz pour Nullsoft"

#~ msgid "Download Pre-built DLLs"
#~ msgstr "Télécharger les DLLs pré-compilées"

#~ msgid "Node.JS and NPM"
#~ msgstr "Node.JS et NPM"

#~ msgid ""
#~ "Problem: Failure to open a file. "
#~ "File: failed opening file "
#~ "\"\\FOLDERSHARE\\XYZSRelease\\...\\Credits.rtf\" Error in"
#~ " script "
#~ "\"C:\\TFS\\XYZProject\\Releases\\NullsoftInstaller\\XYZWin7Installer.nsi\""
#~ " on line 77 -- aborting creation "
#~ "process"
#~ msgstr ""
#~ "Problème : Non ouverture d'un dossier."
#~ " failed opening file "
#~ "\"\\FOLDERSHARE\\XYZSRelease\\...\\Credits.rtf\" Error in"
#~ " script "
#~ "\"C:\\TFS\\XYZProject\\Releases\\NullsoftInstaller\\XYZWin7Installer.nsi\""
#~ " on line 77 -- aborting creation "
#~ "process"

#~ msgid "npm Install version 12.16.3 LTS"
#~ msgstr "npm Install version 12.16.3 LTS"

#~ msgid ""
#~ "Vircadia Builder will ask you to "
#~ "configure it to build the server. "
#~ "The values will be prefilled with "
#~ "defaults, the following steps will "
#~ "explain what they are and what you"
#~ " might want to put. Advanced users:"
#~ " See here for possible environment "
#~ "variables and settings."
#~ msgstr ""

#~ msgid ""
#~ "This value is the release type. "
#~ "For example, the options are production,"
#~ " pr, or dev. If you are making"
#~ " a build for yourself and others "
#~ "to use then use production."
#~ msgstr ""

#~ msgid ""
#~ "This value is the release version. "
#~ "Release numbers should be in a "
#~ "format of YEAR-MAJORVERSION-MINORVERSION "
#~ "which might look like this: 2021.1.0."
#~ msgstr ""

#~ msgid ""
#~ "This value is the build number. We"
#~ " typically use the hash of the "
#~ "most recent commit on that Git tag"
#~ " which might look like this: fd6973b."
#~ msgstr ""

#~ msgid ""
#~ "It will ask you if you would "
#~ "like to proceed with the specified "
#~ "values. If you're happy with the "
#~ "configuration, type yes, otherwise enter "
#~ "no and press enter to start over."
#~ " You can press Ctrl + C "
#~ "simultaneously on your keyboard to exit."
#~ msgstr ""

#~ msgid ""
#~ "Vircadia Builder will now run, it "
#~ "may take a while. See this table"
#~ " for estimated times."
#~ msgstr ""

#~ msgid "Navigate to the pkg-scripts directory."
#~ msgstr ""

#~ msgid ""
#~ "Generate the .rpm package. Set "
#~ "RPMVERSION to the same version you "
#~ "entered for the Release number on "
#~ "Vircadia Builder. Advanced users: the "
#~ "version cannot begin with a letter "
#~ "and cannot include underscores or dashes"
#~ " in it."
#~ msgstr ""

#~ msgid ""
#~ "If successful, the generated .deb "
#~ "package will be in the pkg-scripts"
#~ " folder."
#~ msgstr ""

#~ msgid ""
#~ "Ensure you are using an Amazon "
#~ "Linux 2 system. You will need many"
#~ " CPU cores to complete this process"
#~ " within a reasonable time. As an "
#~ "alternative to AWS EC2, you may "
#~ "use a virtual machine. Here are "
#~ "the recommended specs:"
#~ msgstr ""

#~ msgid ""
#~ "This value is the release version. "
#~ "Release numbers typically should be in"
#~ " a format of YEAR-MAJORVERSION-"
#~ "MINORVERSION which might look like this:"
#~ " 2021.1.0."
#~ msgstr ""

#~ msgid ""
#~ "If successful, the generated .rpm "
#~ "package will be in the pkg-scripts"
#~ " folder of the Vircadia source files."
#~ msgstr ""

#~ msgid ""
#~ "To run Interface from Visual Studio "
#~ "with the debugger attached you need "
#~ "to set Interface as the startup "
#~ "project. To do this, in Solution "
#~ "Explorer, expand the \"Apps\" folder, "
#~ "right click interface, and select \"Set"
#~ " as Startup Project\". Now Debug >"
#~ " Start Debugging and the Local "
#~ "Windows Debugger button on the debug "
#~ "toolbar will start Interface."
#~ msgstr ""
#~ "Pour exécuter Interface à partir de "
#~ "Visual Studio avec le débogueur attaché,"
#~ " vous devez définir Interface comme "
#~ "projet de démarrage. Pour ce faire, "
#~ "dans Solution Explorer, développez le "
#~ "dossier \"Apps\", cliquez avec le bouton"
#~ " droit de la souris sur Interface "
#~ "et sélectionnez \"Set as Startup "
#~ "Project\". Maintenant Debug > Start "
#~ "Debugging et le bouton Local Windows "
#~ "Debugger de la barre d'outils de "
#~ "débogage lancera Interface."

#~ msgid ""
#~ "Note: Installing the sources is optional"
#~ " but recommended if you have room "
#~ "for them (~3GB). You may also want"
#~ " the Qt debug  information files "
#~ "(~7GB)."
#~ msgstr ""

#~ msgid "*Last Updated on March 4, 2021*"
#~ msgstr "Dernière mise à jour le 17 mai 2020"

#~ msgid "OS X"
#~ msgstr "OS X"

#~ msgid "[npm](<https://www.npmjs.com/get-npm>)  Install version 12.16.3 LTS"
#~ msgstr ""

#~ msgid "Perform a clean CMake."
#~ msgstr "Effectuez un CMake propre."

#~ msgid ""
#~ "Ensure you have all the prerequisites"
#~ " fulfilled from the [MacOS Build "
#~ "Guide](BUILD_OSX.md)."
#~ msgstr ""

#~ msgid "*Last Updated on May 25, 2021*"
#~ msgstr "Dernière mise à jour le 17 mai 2020"

#~ msgid "Set `VIRCADIA_USE_PREBUILT_QT=1`"
#~ msgstr ""

#~ msgid "Set `VIRCADIA_USE_QT_VERSION` to the Qt version (defaults to `5.12.3`)"
#~ msgstr ""
#~ "Définissez VIRCADIA_USE_QT_VERSION sur la "
#~ "version Qt (par défaut 5.12.3)"

#~ msgid "Set `HIFI_QT_BASE=/path/to/qt`"
#~ msgstr ""

#~ msgid ""
#~ "Qt must be installed in "
#~ "`$HIFI_QT_BASE/$VIRCADIA_USE_QT_VERSION/qt5-install`."
#~ msgstr ""

#~ msgid "Build from Source"
#~ msgstr "Compiler depuis la Source"

#~ msgid "Create an Installer"
#~ msgstr "Créer un Installateur"

#~ msgid "Interface"
#~ msgstr "Interface"

#~ msgid "Domain Server"
#~ msgstr "Serveur de Domaine"

#~ msgid "Assignment Client"
#~ msgstr "Client d'Assignation"

#~ msgid "Development Instructions"
#~ msgstr "Instructions de Développement"

#~ msgid "Command Line Parameters"
#~ msgstr "Paramètres de Ligne de Commande"

#~ msgid "You can launch an assignment-client with these parameters."
#~ msgstr "Vous pouvez lancer un client d'assignation avec ces paramètres."

#~ msgid "Displays help information"
#~ msgstr "Affiche les informations d'aide"

#~ msgid "Displays version information"
#~ msgstr "Affiche les informations sur la version"

#~ msgid "Assignment client type"
#~ msgstr "Type de client d'assignation"

#~ msgid "0 = audio-mixer"
#~ msgstr "0 = mélangeur audio"

#~ msgid "1 = avatar-mixer"
#~ msgstr "1 = avatar-mixer"

#~ msgid "2 = agent"
#~ msgstr "2 = agent"

#~ msgid "3 = asset-server"
#~ msgstr "3 = serveur d'actifs"

#~ msgid "4 = message-mixer"
#~ msgstr "4 = mélangeur de messages"

#~ msgid "5 = entity-script-server"
#~ msgstr "5 = entité-script-serveur"

#~ msgid "6 = entity-server"
#~ msgstr "6 = entité-serveur"

#~ msgid "Assignment pool"
#~ msgstr "Pool d'assignation"

#~ msgid "Assignment client UDP port"
#~ msgstr "Port UDP du client d'assignation"

#~ msgid "Wallet destination"
#~ msgstr "Destination du portefeuille"

#~ msgid "Assignment server hostname"
#~ msgstr "Attribution du nom d'hôte du serveur"

#~ msgid "Assignment server port"
#~ msgstr "Attribution du port du serveur"

#~ msgid "Number of children to fork"
#~ msgstr "Nombre de descendants à alimenter"

#~ msgid "Minimum number of children"
#~ msgstr "Nombre minimum de descendants"

#~ msgid "Maximum number of children"
#~ msgstr "Nombre maximum de descendants"

#~ msgid "Assignment client monitor port"
#~ msgstr "Port de surveillance du client d'assignation"

#~ msgid "HTTP status server port"
#~ msgstr "Port du serveur d'état HTTP"

#~ msgid "Directory to store logs"
#~ msgstr "Répertoire pour le stockage des journaux"

#~ msgid "PID of the parent process"
#~ msgstr "NID de la procédure parentale"

#~ msgid "General Build Information"
#~ msgstr "Informations Générales sur le Système"

#~ msgid "Build Windows"
#~ msgstr "Système Windows"

#~ msgid "Build Linux"
#~ msgstr "Système Linux"

#~ msgid "Build OSX"
#~ msgstr "Système OSX"

#~ msgid "Build Android"
#~ msgstr "Système Android"

#~ msgid "Building Vircadia"
#~ msgstr "Système Vircadia"

#~ msgid "The following are the guides for building Vircadia from source."
#~ msgstr "Voici les guides pour compiler Vircadia depuis la source."

#~ msgid "*Last Updated on March 8, 2021*"
#~ msgstr "Dernière mise à jour le 17 mai 2020"

#~ msgid "OS Specific Build Guides"
#~ msgstr "Guides de compilation spécifiques pour OS"

#~ msgid "[Build Windows](BUILD_WIN.md) - complete instructions for Windows."
#~ msgstr "Compilation Windows - instructions complètes pour Windows."

#~ msgid "[Build Linux](BUILD_LINUX.md) - additional instructions for Linux."
#~ msgstr "Compilation Linux - instructions supplémentaires pour Linux."

#~ msgid "[Build OSX](BUILD_OSX.md) - additional instructions for OS X."
#~ msgstr "Compilation Linux - instructions supplémentaires pour Linux."

#~ msgid ""
#~ "[Build Android](BUILD_ANDROID.md) - additional "
#~ "instructions for Android."
#~ msgstr "Compilation Android - instructions supplémentaires pour Android."

#~ msgid "Dependencies"
#~ msgstr "Dépendances"

#~ msgid "[git](https://git-scm.com/downloads): >= 1.6"
#~ msgstr ""

#~ msgid "[CMake](https://cmake.org/download/):  3.9 (or greater up to 3.18.x)"
#~ msgstr ""

#~ msgid "[Python](https://www.python.org/downloads/): 3.6 or higher"
#~ msgstr ""

#~ msgid "[Node.JS](https://nodejs.org/en/): >= 12.13.1 LTS"
#~ msgstr ""

#~ msgid "Used to build the Screen Sharing executable."
#~ msgstr "Utilisé pour compiler l'exécutable Screen Sharing."

#~ msgid "CMake External Project Dependencies"
#~ msgstr "CMake Dépendances de Projets Externes"

#~ msgid ""
#~ "These dependencies need not be installed"
#~ " manually. They are automatically "
#~ "downloaded on the platforms where they"
#~ " are required."
#~ msgstr ""
#~ "Ces dépendances ne doivent pas être "
#~ "installées manuellement. Elles sont "
#~ "automatiquement téléchargées sur les "
#~ "plateformes où elles sont requises."

#~ msgid ""
#~ "[Bullet Physics "
#~ "Engine](https://github.com/bulletphysics/bullet3/releases):  "
#~ "2.83"
#~ msgstr ""

#~ msgid "[glm](https://glm.g-truc.net/0.9.8/index.html):  0.9.8"
#~ msgstr ""

#~ msgid ""
#~ "[Oculus SDK](https://developer.oculus.com/downloads/):   "
#~ "1.11 (Windows) / 0.5 (Mac)"
#~ msgstr ""

#~ msgid ""
#~ "[OpenVR](https://github.com/ValveSoftware/openvr):   1.11.11 "
#~ "(Windows, Linux)"
#~ msgstr ""

#~ msgid "[Polyvox](http://www.volumesoffun.com/):   0.2.1"
#~ msgstr ""

#~ msgid ""
#~ "[QuaZip](https://sourceforge.net/projects/quazip/files/quazip/):   "
#~ "0.7.3"
#~ msgstr ""

#~ msgid "[SDL2](https://www.libsdl.org/download-2.0.php):   2.0.3"
#~ msgstr ""

#~ msgid ""
#~ "[Intel Threading Building "
#~ "Blocks](https://www.threadingbuildingblocks.org/):   4.3"
#~ msgstr ""

#~ msgid "[vcpkg](https://github.com/hifi-archive/vcpkg):"
#~ msgstr ""

#~ msgid "[VHACD](https://github.com/virneo/v-hacd)"
#~ msgstr ""

#~ msgid "[zlib](http://www.zlib.net/):   1.28 (Win32 only)"
#~ msgstr "zlib : 1.28 (Win32 seulement)"

#~ msgid ""
#~ "[nvtt](https://github.com/hifi-archive/nvidia-texture-"
#~ "tools):   2.1.1 (customized)"
#~ msgstr ""

#~ msgid ""
#~ "The above dependencies will be "
#~ "downloaded, built, linked and included "
#~ "automatically by CMake where we require"
#~ " them. The CMakeLists files that "
#~ "handle grabbing each of the following"
#~ " external dependencies can be found "
#~ "in the [cmake/externals "
#~ "folder](https://github.com/vircadia/vircadia/tree/master/cmake/externals)."
#~ " The resulting downloads, source files "
#~ "and binaries will be placed in the"
#~ " `build/ext` folder in each of the"
#~ " subfolders for each external project."
#~ msgstr ""
#~ "Les dépendances ci-dessus seront "
#~ "téléchargées, construites, liées et incluses"
#~ " automatiquement par CMake là où nous"
#~ " en avons besoin. Les fichiers "
#~ "CMakeLists qui gèrent la saisie de "
#~ "chacune des dépendances externes suivantes "
#~ "se trouvent dans le dossier "
#~ "cmake/externals. Les téléchargements, fichiers "
#~ "sources et binaires résultants seront "
#~ "placés dans le dossier build/ext dans"
#~ " chacun des sous-dossiers pour chaque"
#~ " projet externe."

#~ msgid ""
#~ "These are not placed in your "
#~ "normal build tree when doing an "
#~ "out of source build so that they"
#~ " do not need to be re-"
#~ "downloaded and re-compiled every time"
#~ " the CMake build folder is cleared."
#~ " Should you want to force a "
#~ "re-download and re-compile of a "
#~ "specific external, you can simply remove"
#~ " that directory from the appropriate "
#~ "subfolder in `build/ext`. Should you "
#~ "want to force a re-download and"
#~ " re-compile of all externals, just"
#~ " remove the `build/ext` folder."
#~ msgstr ""
#~ "Ils ne sont pas placés dans votre"
#~ " arborescence de compilation normale "
#~ "lorsque vous effectuez une compilation "
#~ "hors source, de sorte qu'ils ne "
#~ "doivent pas être retéléchargés et "
#~ "recompilés chaque fois que le dossier"
#~ " de compilation de CMake est vidé."
#~ " Si vous souhaitez forcer un re-"
#~ "téléchargement et une recompilation d'un "
#~ "projet externe spécifique, vous pouvez "
#~ "simplement supprimer ce répertoire du "
#~ "sous-dossier approprié dans build/ext. Si"
#~ " vous voulez forcer un re-"
#~ "téléchargement et une recompilation de "
#~ "tous les externes, il suffit de "
#~ "supprimer le dossier build/ext."

#~ msgid "CMake"
#~ msgstr "CMake"

#~ msgid ""
#~ "Vircadia uses CMake to generate build"
#~ " files and project files for your "
#~ "platform."
#~ msgstr ""
#~ "Vircadia utilise CMake pour générer des"
#~ " fichiers de compilation et des "
#~ "fichiers de projet pour votre plate-"
#~ "forme."

#~ msgid "Qt"
#~ msgstr "Qt"

#~ msgid "CMake will download Qt 5.15.2 using vcpkg."
#~ msgstr "CMake téléchargera Qt 5.12.3 en utilisant vcpkg."

#~ msgid ""
#~ "To override this - i.e., use an"
#~ " installed Qt configuration - you "
#~ "need to set a QT_CMAKE_PREFIX_PATH "
#~ "environment variable pointing to your Qt"
#~ " **lib/cmake** folder. This can either "
#~ "be entered directly into your shell "
#~ "session before you build or in "
#~ "your shell profile (e.g.: ~/.bash_profile, "
#~ "~/.bashrc, ~/.zshrc - this depends on"
#~ " your shell and environment).  The "
#~ "path it needs to be set to "
#~ "will depend on where and how Qt5"
#~ " was installed."
#~ msgstr ""
#~ "Pour passer outre (c'est-à-dire utiliser "
#~ "une configuration Qt installée - vous"
#~ " devrez définir une variable "
#~ "d'environnement QT_CMAKE_PREFIX_PATH pointant sur"
#~ " votre dossier Qt lib/cmake.<br /> "
#~ "Cela peut être entré soit directement"
#~ " dans votre session shell avant la"
#~ " compilation, soit dans votre profil "
#~ "shell (par ex : ~/.bash_profile, "
#~ "~/.bashrc, ~/.zshrc - cela dépend de "
#~ "votre shell et de votre environnement)."
#~ " Le chemin d'accès à Qt5 dépend "
#~ "de l'endroit et de la manière dont"
#~ " il a été installé, par exemple."

#~ msgid "For example, under Linux:"
#~ msgstr ""

#~ msgid "For example, under Windows:"
#~ msgstr ""

#~ msgid "For example, under OSX:"
#~ msgstr "Par exemple :"

#~ msgid ""
#~ "Note: You only need the following "
#~ "components checked under Qt 5.15.2 "
#~ "(select the \"Custom Installation\" option):"
#~ " \"MSVC 2019 64-bit\", \"Qt WebEngine\","
#~ " and \"Qt Script (Deprecated)\"."
#~ msgstr ""

#~ msgid ""
#~ "Note: Installing the sources is optional"
#~ " but recommended if you have room "
#~ "for them (~3GB). You may also want"
#~ " the Qt debug information files "
#~ "(~7GB)."
#~ msgstr ""

#~ msgid ""
#~ "Note: Installing Qt Creator is optional"
#~ " but recommended if you will be "
#~ "editing QML files."
#~ msgstr ""

#~ msgid "VCPKG"
#~ msgstr "VCPKG"

#~ msgid ""
#~ "Vircadia uses vcpkg to download and "
#~ "build dependencies. You do not need "
#~ "to install vcpkg."
#~ msgstr ""
#~ "Vircadia utilise vcpkg pour télécharger "
#~ "et créer des dépendances. Vous n'avez"
#~ " pas besoin d'installer vcpkg."

#~ msgid ""
#~ "Building the dependencies can be lengthy"
#~ " and the resulting files will be "
#~ "stored in your OS temp directory. "
#~ "However, those files can potentially get"
#~ " cleaned up by the OS, so in"
#~ " order to avoid this and having "
#~ "to redo the lengthy build step, "
#~ "you can set an environment variable."
#~ msgstr ""
#~ "La création des dépendances peut être"
#~ " longue et les fichiers résultants "
#~ "seront stockés dans le répertoire "
#~ "temporaire de votre système d'exploitation."
#~ " Cependant, ces fichiers peuvent "
#~ "potentiellement être nettoyés par le "
#~ "système d'exploitation, donc pour éviter "
#~ "cela et devoir refaire la longue "
#~ "étape de compilation, vous pouvez "
#~ "définir une variable d'environnement."

#~ msgid "Linux:"
#~ msgstr "Système Linux:"

#~ msgid "Windows:"
#~ msgstr "Windows:"

#~ msgid ""
#~ "Where `/path/to/directory` is the path "
#~ "to a directory where you wish the"
#~ " build files to get stored."
#~ msgstr ""
#~ "Où /path/to/directory est le chemin "
#~ "d'accès à un répertoire où vous "
#~ "souhaitez que les fichiers de "
#~ "compilation soient stockés."

#~ msgid "Generating Build Files"
#~ msgstr "Génération des Fichiers de Compilation"

#~ msgid "Possible Environment Variables"
#~ msgstr "Variables Environnementales Possibles"

#~ msgid "Generate Files"
#~ msgstr "Générer des Fichiers"

#~ msgid ""
#~ "Create a build directory in the "
#~ "root of your checkout and then run"
#~ " the CMake build from there. This "
#~ "will keep the rest of the "
#~ "directory clean."
#~ msgstr ""
#~ "Créez un répertoire de compilation dans"
#~ " le root de votre checkout et "
#~ "lancez ensuite la compilation CMake à"
#~ " partir de là. Cela permettra de "
#~ "garder le reste du répertoire propre."

#~ msgid ""
#~ "If CMake gives you the same error"
#~ " message repeatedly after the build "
#~ "fails, try removing `CMakeCache.txt`."
#~ msgstr ""
#~ "Si CMake vous donne le même "
#~ "message d'erreur à plusieurs reprises "
#~ "après l'échouement de la compilation, "
#~ "essayez de supprimer CMakeCache.txt."

#~ msgid "Generating a release/debug only vcpkg build"
#~ msgstr "Génération d'une compilation vcpkg uniquement pour release/débogage"

#~ msgid ""
#~ "In order to generate a release or"
#~ " debug only vcpkg package, you could"
#~ " use the use the `VCPKG_BUILD_TYPE` "
#~ "define in your CMake generate command."
#~ " Building a release only vcpkg can"
#~ " drastically decrease the total build "
#~ "time."
#~ msgstr ""
#~ "Afin de générer un paquet vcpkg "
#~ "pour release ou débogage uniquement, "
#~ "vous pouvez utiliser VCPKG_BUILD_TYPE dans "
#~ "votre ligne de commande cmake. Créer "
#~ "un vcpkg pour release uniquement peut"
#~ " réduire considérablement le temps total"
#~ " de compilation."

#~ msgid "For release only vcpkg:"
#~ msgstr "Vcpkg pour release seulement :"

#~ msgid "`cmake .. -DVCPKG_BUILD_TYPE=release`"
#~ msgstr ""

#~ msgid "For debug only vcpkg:"
#~ msgstr "Vcpkg pour le débogage seulement :"

#~ msgid "`cmake .. -DVCPKG_BUILD_TYPE=debug`"
#~ msgstr ""

#~ msgid "Variables"
#~ msgstr "Variables"

#~ msgid ""
#~ "Any variables that need to be set"
#~ " for CMake to find dependencies can"
#~ " be set as ENV variables in "
#~ "your shell profile, or passed directly"
#~ " to CMake with a `-D` flag "
#~ "appended to the `cmake ..` command."
#~ msgstr ""
#~ "Toutes les variables qui doivent être"
#~ " définies pour que CMake puisse "
#~ "trouver des dépendances peuvent être "
#~ "définies comme des variables ENV dans"
#~ " votre profil shell, ou passées "
#~ "directement à CMake avec une option "
#~ "-D ajouté à la commande cmake."

#~ msgid ""
#~ "For example, to pass the "
#~ "QT_CMAKE_PREFIX_PATH variable (if not using"
#~ " the vcpkg'ed version) during build "
#~ "file generation:"
#~ msgstr ""
#~ "Par exemple, pour passer la variable "
#~ "QT_CMAKE_PREFIX_PATH (si vous n'utilisez pas"
#~ " la version vcpkg'ed) lors de la "
#~ "génération du fichier de compilation :"

#~ msgid "Finding Dependencies"
#~ msgstr "Recherche de Dépendances"

#~ msgid ""
#~ "The following applies for dependencies "
#~ "we do not grab via CMake "
#~ "ExternalProject (OpenSSL is an example), "
#~ "or for dependencies you have opted "
#~ "not to grab as a CMake "
#~ "ExternalProject (via -DUSE_LOCAL_$NAME=0). The "
#~ "list of dependencies we grab by "
#~ "default as external projects can be "
#~ "found in [the CMake External Project "
#~ "Dependencies section](#cmake-external-project-"
#~ "dependencies)."
#~ msgstr ""
#~ "Ce qui suit s'applique aux dépendances"
#~ " que nous ne saisissons pas via "
#~ "CMake ExternalProject (OpenSSL est un "
#~ "exemple), ou aux dépendances que vous"
#~ " avez choisi de ne pas saisir "
#~ "en tant que CMake ExternalProject (via"
#~ " -DUSE_LOCAL_$NAME=0). La liste des "
#~ "dépendances que nous saisissons par "
#~ "défaut en tant que projets externes "
#~ "se trouve dans la section CMake "
#~ "External Project Dependencies."

#~ msgid ""
#~ "You can point our [CMake find "
#~ "modules](https://github.com/vircadia/vircadia/tree/master/cmake/modules)"
#~ " to the correct version of "
#~ "dependencies by setting one of the "
#~ "three following variables to the "
#~ "location of the correct version of "
#~ "the dependency."
#~ msgstr ""
#~ "Vous pouvez pointer nos modules de "
#~ "recherche CMake vers la version correcte"
#~ " des dépendances en définissant l'une "
#~ "des trois variables suivantes à "
#~ "l'emplacement de la version correcte de"
#~ " la dépendance."

#~ msgid ""
#~ "In the examples below the variable "
#~ "$NAME would be replaced by the "
#~ "name of the dependency in uppercase, "
#~ "and $name would be replaced by the"
#~ " name of the dependency in lowercase"
#~ " (ex: OPENSSL_ROOT_DIR, openssl)."
#~ msgstr ""
#~ "Dans les exemples ci-dessous, la "
#~ "variable $NAME sera remplacée par le "
#~ "nom de la dépendance en majuscule, "
#~ "et $name sera remplacé par le nom"
#~ " de la dépendance en minuscule (ex"
#~ " : OPENSSL_ROOT_DIR, openssl)."

#~ msgid ""
#~ "$NAME_ROOT_DIR - pass this variable to"
#~ " Cmake with the -DNAME_ROOT_DIR= flag "
#~ "when running Cmake to generate build "
#~ "files"
#~ msgstr ""
#~ "$NAME_ROOT_DIR - passer cette variable à"
#~ " Cmake avec l'option -DNAME_ROOT_DIR= lors"
#~ " de l'exécution de Cmake pour générer"
#~ " les fichiers de compilation"

#~ msgid "$NAME_ROOT_DIR - set this variable in your ENV"
#~ msgstr "$NAME_ROOT_DIR - définissez cette variable dans votre ENV"

#~ msgid ""
#~ "HIFI_LIB_DIR - set this variable in "
#~ "your ENV to your Vircadia lib "
#~ "folder, should contain a folder '$name'"
#~ msgstr ""
#~ "HIFI_LIB_DIR - Définissez cette variable "
#~ "dans votre ENV pour votre dossier "
#~ "Vircadia lib, qui doit contenir un "
#~ "dossier '$name'"

#~ msgid "Optional Components"
#~ msgstr "Composantes Optionnelles"

#~ msgid "Build Options"
#~ msgstr "Options de Compilation"

#~ msgid "The following build options can be used when running CMake"
#~ msgstr ""
#~ "Les options de compilation suivantes "
#~ "peuvent être utilisées lors de "
#~ "l'exécution de CMake"

#~ msgid "BUILD_CLIENT"
#~ msgstr "BUILD_CLIENT"

#~ msgid "BUILD_SERVER"
#~ msgstr "BUILD_SERVER"

#~ msgid "BUILD_TESTS"
#~ msgstr "BUILD_TESTS"

#~ msgid "BUILD_TOOLS"
#~ msgstr "BUILD_TOOLS"

#~ msgid "CLIENT_ONLY // Will package only the Interface"
#~ msgstr "CLIENT_ONLY // N'empaquetera que l'Interface"

#~ msgid "SERVER_ONLY // Will package only the Server"
#~ msgstr "SERVER_ONLY // N'empaquetera que le Serveur"

#~ msgid "Developer Build Options"
#~ msgstr "Options de Compilation pour les Développeurs"

#~ msgid "USE_GLES"
#~ msgstr "USE_GLES"

#~ msgid "DISABLE_UI"
#~ msgstr "DISABLE_UI"

#~ msgid "Devices"
#~ msgstr "Périphériques"

#~ msgid ""
#~ "You can support external input/output "
#~ "devices such as Leap Motion, MIDI, "
#~ "and more by adding each individual "
#~ "SDK in the visible building path. "
#~ "Refer to the readme file available "
#~ "in each device folder in "
#~ "[interface/external/](https://github.com/vircadia/vircadia/tree/master/interface/external)"
#~ " for the detailed explanation of the"
#~ " requirements to use the device."
#~ msgstr ""
#~ "Vous pouvez prendre en charge des "
#~ "périphériques d'entrée/sortie externes tels "
#~ "que la Leap Motion, le MIDI, et"
#~ " bien d'autres en ajoutant chaque SDK"
#~ " individuel dans le chemin d'accès "
#~ "visible de compilation. Reportez-vous au"
#~ " fichier readme disponible dans chaque "
#~ "dossier de périphérique dans "
#~ "interface/external/ pour une explication "
#~ "détaillée des conditions d'utilisation du "
#~ "périphérique."

#~ msgid "*Last Updated on December 15, 2020*"
#~ msgstr "Dernière mise à jour le 1er décembre 2020"

#~ msgid ""
#~ "Please read the [general build "
#~ "guide](BUILD.md) for information on building"
#~ " other platforms. Only Android specific "
#~ "instructions are found in this file. "
#~ "**Note that these instructions apply to"
#~ " building for the Oculus Quest 1.**"
#~ msgstr ""

#~ msgid ""
#~ "Building is currently supported on "
#~ "Windows, OSX and Linux, but developers"
#~ " intending to do work on the "
#~ "library dependencies are strongly urged "
#~ "to use 64 bit Linux as a "
#~ "build platform."
#~ msgstr ""
#~ "La compilation est à ce jour "
#~ "supportée pour Windows, OSX et Linux,"
#~ " mais les développeurs qui ont "
#~ "l'intention de travailler sur les "
#~ "dépendances de la bibliothèque sont "
#~ "vivement encouragés à utiliser Linux 64"
#~ " bits comme plate-forme de "
#~ "compilation."

#~ msgid "OS specific dependencies"
#~ msgstr "Dépendances spécifiques pour OS"

#~ msgid ""
#~ "Please install the dependencies for your"
#~ " OS using the [Windows](BUILD_WIN.md), "
#~ "[OSX](BUILD_OSX.md) or [Linux](BUILD_LINUX.md) build"
#~ " instructions before attempting to build"
#~ " for Android."
#~ msgstr ""
#~ "Veuillez installer les dépendances de "
#~ "votre système d'exploitation en utilisant "
#~ "les instructions de compilation pour "
#~ "Windows, OSX ou Linux avant d'essayer"
#~ " de compiler pour Android."

#~ msgid "Android Studio"
#~ msgstr "Android Studio"

#~ msgid ""
#~ "Download the [Android "
#~ "Studio](https://developer.android.com/studio/index.html) "
#~ "installer and run it. Once installed,"
#~ " click _File_ then _Settings_, expand "
#~ "_Appearance & Behavior_ then expand "
#~ "_System Settings_ and select _Android "
#~ "SDK_."
#~ msgstr ""

#~ msgid "From the _SDK Platforms_ tab, select API levels 26 and 28."
#~ msgstr ""
#~ "Dans l'onglet Plates-formes SDK, "
#~ "sélectionnez les niveaux d'API 26 et "
#~ "28."

#~ msgid "From the _SDK Tools_ tab, select the following"
#~ msgstr "Dans l'onglet Outils du SDK, sélectionnez les éléments suivants"

#~ msgid "Android SDK Build-Tools"
#~ msgstr "Android SDK Build-Tools"

#~ msgid "GPU Debugging Tools"
#~ msgstr "GPU Debugging Tools"

#~ msgid "LLDB"
#~ msgstr "LLDB"

#~ msgid "Android SDK Platform-Tools"
#~ msgstr "Android SDK Platform-Tools"

#~ msgid "Android SDK Tools"
#~ msgstr "Android SDK Tools"

#~ msgid "NDK (even if you have the NDK installed separately)"
#~ msgstr "NDK (même si vous avez installé le NDK séparément)"

#~ msgid ""
#~ "Still in the _SDK Tools_ tab, "
#~ "check off _Show Package Details_ at "
#~ "the bottom. Select CMake 3.6.4. Do "
#~ "this even if you have a separate"
#~ " CMake installation.  Also, make sure "
#~ "the NDK installed version is 18 "
#~ "(or higher)."
#~ msgstr ""

#~ msgid ""
#~ "Now go back to _File_ then "
#~ "_Project Structure_ then under _Project_ "
#~ "set the Android Gradle Plugin Version"
#~ " to `3.2.1` and Gradle Version to "
#~ "`4.10.1`."
#~ msgstr ""

#~ msgid ""
#~ "If Android Studio pops open the "
#~ "\"Plugin Update Recommeded\" dialog, do "
#~ "not click update, just click X on"
#~ " the top right to close.  Later "
#~ "versions of the Gradle plugin have "
#~ "known issues with cz.malohlava."
#~ msgstr ""

#~ msgid "Environment"
#~ msgstr "Environnement"

#~ msgid "Create a keystore in Android Studio"
#~ msgstr "Créer un fichier de clé dans Android Studio"

#~ msgid ""
#~ "Follow the directions "
#~ "[here](https://developer.android.com/studio/publish/app-signing"
#~ "#generate-key) to create a keystore "
#~ "file. You can save it anywhere "
#~ "(preferably not in the `vircadia` "
#~ "folder)."
#~ msgstr ""
#~ "Suivez les instructions ici pour créer"
#~ " un fichier de clé. Vous pouvez "
#~ "l'enregistrer n'importe où (de préférence "
#~ "pas dans le dossier Vircadia)."

#~ msgid "Set up machine specific Gradle properties"
#~ msgstr "Configurer les propriétés Gradle spécifiques à la machine"

#~ msgid ""
#~ "Create a `gradle.properties` file in the"
#~ " `.gradle` folder (`$HOME/.gradle` on Unix,"
#~ " `Users/<yourname>/.gradle` on Windows). Edit "
#~ "the file to contain the following"
#~ msgstr ""
#~ "Créez un fichier gradle.properties dans "
#~ "le répertoire .gradle ($HOME/.gradle on "
#~ "Unix, Users/<votre nom d'utilisateur>/.gradle "
#~ "sous Windows). Modifiez le fichier de"
#~ " manière à ce qu'il contienne les "
#~ "éléments suivants"

#~ msgid ""
#~ "Note, do not use $HOME for the "
#~ "path. It must be a fully qualified"
#~ " path name. Also, be sure to "
#~ "use forward slashes in your path."
#~ msgstr ""
#~ "Attention, n'utilisez pas $HOME pour le"
#~ " chemin d'accès. Il doit s'agir d'un"
#~ " nom de chemin d'accès entièrement "
#~ "qualifié. Veillez également à utiliser "
#~ "des barres obliques dans votre chemin"
#~ " d'accès."

#~ msgid "If you are building for an Android phone"
#~ msgstr "Si vous compilez pour un téléphone Android"

#~ msgid "Add these lines to `gradle.properties`"
#~ msgstr "Ajouter ces lignes à gradle.properties"

#~ msgid "If you are building for an Oculus Quest"
#~ msgstr "Si vous compilez pour une Oculus Quest"

#~ msgid ""
#~ "The Frame Player for both Android "
#~ "Phone and Oculus Quest is optional, "
#~ "so if you encounter problems with "
#~ "these during your build, you can "
#~ "skip them by adding these lines to"
#~ " `gradle.properties`"
#~ msgstr ""

#~ msgid "Clone the repository"
#~ msgstr "Cloner le répertoire"

#~ msgid "`git clone https://github.com/vircadia/vircadia.git`"
#~ msgstr "git clone https://github.com/vircadia/vircadia.git"

#~ msgid "Building & Running"
#~ msgstr "Compiler & Éxecuter"

#~ msgid "Building Modules"
#~ msgstr "Modules de Compilation"

#~ msgid "Open Android Studio"
#~ msgstr "Ouvrez Android Studio"

#~ msgid "Choose _Open an existing Android Studio project_"
#~ msgstr "Choisissez Open an existing Android Studio project"

#~ msgid ""
#~ "Navigate to the `vircadia` repository "
#~ "that had you cloned and choose the"
#~ " `android` folder and select _OK_"
#~ msgstr ""
#~ "Naviguez vers le répertoire Vircadia, "
#~ "choisissez le dossier android et "
#~ "sélectionnez OK"

#~ msgid ""
#~ "Wait for Gradle to sync (this "
#~ "should take around 20 minutes the "
#~ "first time)"
#~ msgstr ""
#~ "Attendez que Gradle se synchronise (cela"
#~ " devrait prendre environ 20 minutes "
#~ "la première fois)"

#~ msgid ""
#~ "If a dialog pops open saying "
#~ "\"Plugin Update Recommeded\" dialog, do "
#~ "not click update, just click X on"
#~ " the top right to close."
#~ msgstr ""

#~ msgid ""
#~ "In the _Project_ window click on "
#~ "the project you wish to build "
#~ "(i.e. \"questInterface\") then click _Build_"
#~ " in the top menu and choose "
#~ "_Make Module 'questInterface'_"
#~ msgstr ""

#~ msgid ""
#~ "By default this will build the "
#~ "\"debug\" apk, you can change this "
#~ "by opening the _Build Variants_ window"
#~ " along the left side and select "
#~ "other build types such as \"release\"."
#~ msgstr ""

#~ msgid ""
#~ "Your newly build APK should reside "
#~ "in `vircadia\\android\\apps\\questInterface\\release` (if"
#~ " you chose release)."
#~ msgstr ""

#~ msgid "Running a Module"
#~ msgstr "Exécuter un Module"

#~ msgid ""
#~ "You are free to use the \"adb\""
#~ " command line or other development "
#~ "tools to install (sideload on Quest) "
#~ "your newly built APK, or you can"
#~ " follow the instructions below to "
#~ "load the APK via Android Studio."
#~ msgstr ""

#~ msgid ""
#~ "In the toolbar at the top of "
#~ "Android Studio, next to the green "
#~ "hammer icon, you should see a "
#~ "dropdown menu."
#~ msgstr ""
#~ "Dans la barre d'outils en haut "
#~ "d'Android Studio, à côté de l'icône "
#~ "verte du marteau, vous devriez voir "
#~ "un menu déroulant."

#~ msgid ""
#~ "You may already see a configuration "
#~ "for the module you are trying to"
#~ " build. If so, select it."
#~ msgstr ""
#~ "Il se peut que vous voyiez déjà"
#~ " une configuration pour le module que"
#~ " vous essayez de compiler. Si c'est"
#~ " le cas, sélectionnez-la."

#~ msgid "Otherwise, select _Edit Configurations_."
#~ msgstr "Sinon, sélectionnez Edit Configurations."

#~ msgid "Your configuration should be as follows"
#~ msgstr "Votre configuration devrait être la suivante"

#~ msgid "Type: Android App"
#~ msgstr "Type : Android App"

#~ msgid ""
#~ "Module: <your module> (you probably want"
#~ " `interface` or `questInterface`)"
#~ msgstr ""
#~ "Module : <votre module> (vous voulez "
#~ "probablement interface ou questInterface)"

#~ msgid ""
#~ "For the interface modules, you also "
#~ "need to select the activity to "
#~ "launch."
#~ msgstr ""
#~ "Pour les modules d'interface, vous devez"
#~ " également sélectionner l'activité à "
#~ "lancer."

#~ msgid "For the Android phone interface"
#~ msgstr "Pour l'interface du téléphone Android"

#~ msgid "From the _Launch_ drop down menu, select _Specified Activity_"
#~ msgstr "Dans le menu déroulant Launch, sélectionnez Specified Activity"

#~ msgid ""
#~ "In the _Activity_ field directly below,"
#~ " put `io.highfidelity.hifiinterface.PermissionChecker`"
#~ msgstr ""
#~ "Dans le champ Activity directement en"
#~ " dessous, mettez "
#~ "io.highfidelity.hifiinterface.PermissionChecker"

#~ msgid "For the Oculus Quest interface"
#~ msgstr "Pour l'interface de l'Oculus Quest"

#~ msgid ""
#~ "In the _Activity_ field directly below,"
#~ " put `io.highfidelity.questInterface.PermissionsChecker`"
#~ msgstr ""
#~ "Dans le champActivity directement en "
#~ "dessous, mettez "
#~ "io.highfidelity.questInterface.PermissionsChecker"

#~ msgid "Note the 's' in Permission**s**Checker for the Quest."
#~ msgstr "Notez le 's' dans PermissionsChecker pour la Quest."

#~ msgid ""
#~ "Now you are able to run your "
#~ "module! Click the green play button "
#~ "in the top toolbar of Android "
#~ "Studio."
#~ msgstr ""
#~ "Vous pouvez maintenant faire fonctionner "
#~ "votre module ! Cliquez sur le "
#~ "bouton vert de lecture dans la "
#~ "barre d'outils supérieure d'Android Studio."

#~ msgid "Troubleshooting"
#~ msgstr "Dépannage en cas de Problèmes"

#~ msgid "To view a more complete debug log,"
#~ msgstr "Pour consulter un journal de débogage plus complet,"

#~ msgid ""
#~ "Click the icon with the two "
#~ "overlapping squares in the upper left"
#~ " corner of the tab where the "
#~ "sync is running (hover text says "
#~ "_Toggle view_)"
#~ msgstr ""
#~ "Cliquez sur l'icône avec les deux "
#~ "carrés qui se chevauchent dans le "
#~ "coin supérieur gauche de l'onglet où "
#~ "la synchronisation est en cours (le "
#~ "texte du survol dit Toggle view)"

#~ msgid ""
#~ "To change verbosity, click _File > "
#~ "Settings_. Under _Build, Execution, Deployment"
#~ " > Compiler_ you can add command-"
#~ "line flags, as per Gradle documentation"
#~ msgstr ""
#~ "Pour modifier la verbosité, cliquez sur"
#~ " Fichier > Settings. Under Build, "
#~ "Execution, Deployment > Compiler vous "
#~ "pouvez ajouter des options de ligne "
#~ "de commande, conformément à la "
#~ "documentation Gradle"

#~ msgid ""
#~ "If you encounter CMake issues, try "
#~ "adding the following system environment "
#~ "variable:"
#~ msgstr ""
#~ "Si vous rencontrez des problèmes avec"
#~ " CMake, essayez d'ajouter la variable "
#~ "d'environnement système suivante :"

#~ msgid ""
#~ "With your start menu, search for "
#~ "'Edit the System Environment Variables' "
#~ "and open it."
#~ msgstr ""

#~ msgid "Click on 'Advanced' tab, then 'Environment Variables'"
#~ msgstr "Cliquez sur 'Environment Variables'"

#~ msgid "Select 'New' under System variables"
#~ msgstr ""

#~ msgid "Set \"Variable name\" to QT_CMAKE_PREFIX_PATH"
#~ msgstr ""

#~ msgid ""
#~ "Set \"Variable value\" to the directory"
#~ " that your android build placed the"
#~ " CMake 3.6.4 library CMake directory "
#~ "(i.e. android\\qt\\lib\\cmake)."
#~ msgstr ""

#~ msgid "Some things you can try if you want to do a clean build"
#~ msgstr ""
#~ "Voici quelques exemples de ce que "
#~ "vous pouvez essayer si vous voulez "
#~ "faire une compilation entièrement nouvelle"

#~ msgid ""
#~ "Delete the `build` and `.externalNativeBuild`"
#~ " folders from the folder for each "
#~ "module you're building (for example, "
#~ "`vircadia/android/apps/interface`)"
#~ msgstr ""
#~ "Supprimez les dossiers build et "
#~ ".externalNativeBuild du dossier de chaque "
#~ "module que vous compilez (par exemple,"
#~ " hifi/android/apps/interface)"

#~ msgid ""
#~ "If you have set your `HIFI_VCPKG_ROOT`"
#~ " environment variable, delete the contents"
#~ " of that directory; otherwise, delete "
#~ "`AppData/Local/Temp/hifi`"
#~ msgstr ""
#~ "Si vous avez défini votre variable "
#~ "d'environnement HIFI_VCPKG_ROOT, supprimez le "
#~ "contenu de ce répertoire ; sinon, "
#~ "supprimez AppData/Local/Temp/hifi"

#~ msgid ""
#~ "In Android Studio, click _File > "
#~ "Invalidate Caches / Restart_ and select"
#~ " _Invalidate and Restart_"
#~ msgstr ""
#~ "Dans Android Studio, cliquez sur File"
#~ " > Invalidate Caches / Restart et "
#~ "sélectionnez Invalidate and Restart"

#~ msgid "If you see lots of \"couldn't acquire lock\" errors,"
#~ msgstr ""
#~ "Si vous constatez de nombreuses erreurs"
#~ " de type \"couldn't acquire lock\","

#~ msgid "Open Task Manager and close any running Clang / Gradle processes"
#~ msgstr ""
#~ "Ouvrir le gestionnaire de tâches et "
#~ "fermer les processus Clang / Gradle "
#~ "en cours"

#~ msgid "*Last Updated on December 1, 2020*"
#~ msgstr "Dernière mise à jour le 1er décembre 2020"

#~ msgid ""
#~ "Please read the [general build "
#~ "guide](BUILD.md) for information on "
#~ "dependencies required for all platforms. "
#~ "Only Linux specific instructions are "
#~ "found in this file."
#~ msgstr ""
#~ "Veuillez lire le guide général de "
#~ "compilation pour obtenir des informations "
#~ "sur les dépendances requises pour toutes"
#~ " les plateformes. Seules les instructions"
#~ " spécifiques à Linux se trouvent dans"
#~ " ce fichier."

#~ msgid ""
#~ "You can use the [Vircadia "
#~ "Builder](https://github.com/vircadia/vircadia-builder) to"
#~ " build on Linux more easily. "
#~ "Alternatively, you can follow the manual"
#~ " steps below."
#~ msgstr ""
#~ "Vous pouvez utiliser le Vircadia Builder"
#~ " pour compiler sur Linux plus "
#~ "facilement. Vous pouvez également suivre "
#~ "les étapes du manuel ci-dessous."

#~ msgid "Ubuntu 16.04/18.04 specific build guide"
#~ msgstr "Guide de compilation spécifique à Ubuntu 16.04/18.04"

#~ msgid "Ubuntu 16.04 only"
#~ msgstr "Ubuntu 16.04 seulement"

#~ msgid ""
#~ "Add the following line to "
#~ "*.bash_profile*   `export "
#~ "QT_QPA_FONTDIR=/usr/share/fonts/truetype/dejavu/`"
#~ msgstr ""
#~ "Ajouter la ligne suivante à "
#~ ".bash_profile<br />export "
#~ "QT_QPA_FONTDIR=/usr/share/fonts/truetype/dejavu/"

#~ msgid "Ubuntu 18.04 server only"
#~ msgstr "Serveur Ubuntu 18.04 uniquement"

#~ msgid ""
#~ "Add the universe repository:   _(This is"
#~ " not enabled by default on the "
#~ "server edition)_"
#~ msgstr ""
#~ "Ajouter le répertoire de l'univers:<br "
#~ "/>(Ceci n'est pas activé par défaut "
#~ "sur l'édition du serveur)"

#~ msgid "Install build tools:"
#~ msgstr "Installer des outils de compilation :"

#~ msgid "First update the repositories:"
#~ msgstr "Mettez d'abord à jour les répertoires :"

#~ msgid "git"
#~ msgstr "git"

#~ msgid "Verify by git --version"
#~ msgstr "Vérifier par git --version"

#~ msgid "g++"
#~ msgstr "g++"

#~ msgid "Verify by g++ --version"
#~ msgstr "Vérifier par g++ --version"

#~ msgid "*Ubuntu 18.04* cmake"
#~ msgstr "Ubuntu 18.04 cmake"

#~ msgid "Verify by cmake --version"
#~ msgstr "Vérifier par cmake --version"

#~ msgid "*Ubuntu 16.04* cmake"
#~ msgstr "Ubuntu 16.04 cmake"

#~ msgid "Install build dependencies:"
#~ msgstr "Installer des dépendances de compilation :"

#~ msgid "OpenSSL:"
#~ msgstr "OpenSSL :"

#~ msgid "Verify with `openssl version`"
#~ msgstr "Vérifier avec openssl version"

#~ msgid "OpenGL:"
#~ msgstr "OpenGL :"

#~ msgid "Verify OpenGL:"
#~ msgstr "Vérifier OpenGL :"

#~ msgid ""
#~ "First install mesa-utils with the "
#~ "command `sudo apt install mesa-utils "
#~ "-y`"
#~ msgstr ""
#~ "Installez d'abord mesa-utils avec la "
#~ "commande sudo apt install mesa-utils "
#~ "-y"

#~ msgid "Then run `glxinfo | grep \"OpenGL version\"`"
#~ msgstr "Puis lancez glxinfo | grep \"OpenGL version\""

#~ msgid "To compile interface in a server you must install:"
#~ msgstr "Pour compiler l'interface dans un serveur, vous devez installer :"

#~ msgid "Misc dependencies:"
#~ msgstr "Diverses dépendances :"

#~ msgid "Install Python 3 and required packages:"
#~ msgstr "Installez Python 3 et les paquets nécessaires :"

#~ msgid "Install node, required to build the jsdoc documentation:"
#~ msgstr "Installez node, nécessaire pour compiler la documentation jsdoc :"

#~ msgid "Get code and checkout the branch you need"
#~ msgstr "Obtenez le code et extrayez la branche dont vous avez besoin"

#~ msgid "Clone this repository:"
#~ msgstr "Clonez ce répertoire :"

#~ msgid ""
#~ "To compile a DEV version checkout "
#~ "the branch you need. To get a "
#~ "list of all tags:"
#~ msgstr ""
#~ "Pour compiler une version DEV, extrayez"
#~ " la branche dont vous avez besoin."
#~ " Pour obtenir une liste de tous "
#~ "les tags :"

#~ msgid "Then checkout the main branch with:"
#~ msgstr "Ensuite, vous pouvez extraire la branche principale avec :"

#~ msgid "Using a custom Qt build"
#~ msgstr "Utiliser une compilation Qt personnalisée"

#~ msgid ""
#~ "Qt binaries are only provided for "
#~ "Ubuntu. In order to build on other"
#~ " distributions, a Qt5 install needs "
#~ "to be provided by setting the "
#~ "`VIRCADIA_QT_PATH` environment variable to a"
#~ " directory containing a Qt install."
#~ msgstr ""
#~ "Les binaires Qt ne sont fournis "
#~ "que pour Ubuntu. Afin de compiler "
#~ "sur d'autres distributions, une installation"
#~ " de Qt5 doit être fournie comme "
#~ "suit :"

#~ msgid "Using the system's Qt"
#~ msgstr ""

#~ msgid ""
#~ "The system's Qt can be used, if"
#~ " the development packages are installed,"
#~ " by setting the `VIRCADIA_USE_SYSTEM_QT` "
#~ "environment variable. The minimum recommended"
#~ " version is Qt 5.15.2, which is "
#~ "also the last version available in "
#~ "the Qt 5 branch. It is expected"
#~ " that Linux distributions will have "
#~ "Qt 5.15.2 available for a long "
#~ "time."
#~ msgstr ""

#~ msgid "Compiling"
#~ msgstr "Compilation"

#~ msgid "Create the build directory:"
#~ msgstr "Créez le répertoire de compilation :"

#~ msgid "Prepare makefiles:"
#~ msgstr "Préparez les makefiles :"

#~ msgid "If cmake fails with a vcpkg error - delete /tmp/hifi/vcpkg."
#~ msgstr "Si cmake échoue avec une erreur vcpkg - supprimez /tmp/hifi/vcpkg."

#~ msgid "Start compilation of the server and get a cup of coffee:"
#~ msgstr "Lancez la compilation du serveur et prenez une tasse de café :"

#~ msgid "To compile interface:"
#~ msgstr "Compiler l'interface :"

#~ msgid ""
#~ "The commands above will compile with "
#~ "a single thread. If you have "
#~ "enough memory, you can decrease your "
#~ "build time using the `-j` flag. "
#~ "Since most x64 CPUs support two "
#~ "threads per core, this works out "
#~ "to CPU_COUNT*2. As an example, if "
#~ "you have a 2 core machine, you "
#~ "could use:"
#~ msgstr ""
#~ "Les commandes ci-dessus se compilent "
#~ "avec un seul thread. Si vous avez"
#~ " suffisamment de mémoire, vous pouvez "
#~ "réduire votre temps de compilation en"
#~ " utilisant l'option -j. Comme la "
#~ "plupart des processeurs x64 supportent "
#~ "deux threads par core, cela correspond"
#~ " à CPU_COUNT*2. Par exemple, si vous"
#~ " avez une machine à deux cores, "
#~ "vous pouvez utiliser :"

#~ msgid "In a server, it does not make sense to compile interface."
#~ msgstr "Dans un serveur, cela ne fait pas de sense de compiler l'interface."

#~ msgid "Running the software"
#~ msgstr "Exécution du logiciel"

#~ msgid "Domain server"
#~ msgstr "Serveur de domaine"

#~ msgid "Running domain server:"
#~ msgstr "Exécution du serveur de domaine :"

#~ msgid "Assignment clients"
#~ msgstr "Clients d'Assignation"

#~ msgid "Running assignment client:"
#~ msgstr "Exécution d'un client d'assignation :"

#~ msgid "Running interface:"
#~ msgstr "Exécution de l'interface :"

#~ msgid "Go to localhost in the running interface."
#~ msgstr "Aller à localhost dans l'interface en cours d'exécution."

#~ msgid "Notes"
#~ msgstr "Notes"

#~ msgid ""
#~ "If your goal is to set up a"
#~ " development environment, it is desirable"
#~ " to set the directory that vcpkg "
#~ "builds into with the `HIFI_VCPKG_BASE` "
#~ "environment variable. For example, you "
#~ "might set `HIFI_VCPKG_BASE` to "
#~ "`/home/$USER/vcpkg`. By default, vcpkg will"
#~ " build in the system `/tmp` "
#~ "directory."
#~ msgstr ""
#~ "Si votre objectif est de mettre en"
#~ " place un environnement de développement,"
#~ " il est souhaitable de définir le "
#~ "répertoire dans lequel vcpkg s'intègre "
#~ "avec la variable d'environnement "
#~ "HIFI_VCPKG_BASE. Par exemple, vous pouvez "
#~ "saisir la variable HIFI_VCPKG_BASE avec "
#~ "la valeur /home/$USER/vcpkg. Par défaut, "
#~ "vcpkg sera intégré dans le répertoire"
#~ " /tmp du système."

#~ msgid "*Last Updated on January 16, 2021*"
#~ msgstr "Dernière mise à jour le 17 mai 2020"

#~ msgid ""
#~ "Please read the [general build "
#~ "guide](BUILD.md) for information on "
#~ "dependencies required for all platforms. "
#~ "Only macOS specific instructions are "
#~ "found in this document."
#~ msgstr ""
#~ "Veuillez lire le guide général de "
#~ "compilation pour obtenir des informations "
#~ "sur les dépendances requises pour toutes"
#~ " les plateformes. Seules les instructions"
#~ " spécifiques à MacOS se trouvent dans"
#~ " ce document."

#~ msgid "Homebrew"
#~ msgstr "Homebrew"

#~ msgid ""
#~ "[Homebrew](https://brew.sh/) is an excellent "
#~ "package manager for macOS. It makes "
#~ "install of some Vircadia dependencies "
#~ "very simple."
#~ msgstr ""
#~ "Homebrew est un excellent gestionnaire "
#~ "de paquets pour macOS. Il rend "
#~ "l'installation de certaines dépendances de "
#~ "Vircadia très simple."

#~ msgid ""
#~ "Note: cmake versions > 3.18.x have "
#~ "known problems building Vircadia, so "
#~ "alternatively you can download cmake "
#~ "3.18.4 (or earlier versions) from "
#~ "[Github](https://github.com/Kitware/CMake/releases)."
#~ msgstr ""

#~ msgid "Python 3"
#~ msgstr "Python 3"

#~ msgid ""
#~ "Download an install Python 3.6.6 or "
#~ "higher from [here](https://www.python.org/downloads/). "
#~ "Execute the `Update Shell Profile.command` "
#~ "script that is provided with the "
#~ "installer."
#~ msgstr ""
#~ "Téléchargez une installation de Python "
#~ "3.6.6 ou supérieur à partir d'ici.<br"
#~ " />Execute the Update Shell Profile.command"
#~ " script qui est fourni avec "
#~ "l'installateur."

#~ msgid "OSX SDK"
#~ msgstr "SDK OSX"

#~ msgid ""
#~ "You will need version `10.12` of "
#~ "the OSX SDK for building, otherwise "
#~ "you may have crashing or other "
#~ "unintended issues due to the deprecation"
#~ " of OpenGL on OSX. You can get"
#~ " that SDK from [here](https://github.com/phracker"
#~ "/MacOSX-SDKs). You must copy it in"
#~ " to your Xcode SDK directory, e.g."
#~ msgstr ""

#~ msgid "OpenSSL"
#~ msgstr "OpenSSL"

#~ msgid ""
#~ "Assuming you've installed OpenSSL using "
#~ "the homebrew instructions above, you'll "
#~ "need to set OPENSSL_ROOT_DIR so CMake"
#~ " can find your installations. For "
#~ "OpenSSL installed via homebrew, set "
#~ "OPENSSL_ROOT_DIR via     `export "
#~ "OPENSSL_ROOT_DIR=/usr/local/opt/openssl`     or by "
#~ "appending `-DOPENSSL_ROOT_DIR=/usr/local/opt/openssl` to"
#~ " `cmake`"
#~ msgstr ""
#~ "En supposant que vous avez installé "
#~ "OpenSSL en utilisant les instructions "
#~ "homebrew ci-dessus, vous devrez définir"
#~ " OPENSSL_ROOT_DIR pour que CMake puisse "
#~ "trouver vos installations.<br />Pour OpenSSL"
#~ " installé via homebrew, définissez "
#~ "OPENSSL_ROOT_DIR via export "
#~ "OPENSSL_ROOT_DIR=/usr/local/opt/openssl ou en "
#~ "ajoutant -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl à "
#~ "cmake"

#~ msgid "Xcode"
#~ msgstr "Xcode"

#~ msgid ""
#~ "You can ask CMake to generate "
#~ "Xcode project files instead of Unix "
#~ "Makefiles using the `-G Xcode` parameter"
#~ " after CMake. You will need to "
#~ "select the Xcode installation in the "
#~ "terminal first if you have not "
#~ "done so already."
#~ msgstr ""
#~ "Vous pouvez demander à CMake de "
#~ "générer des fichiers de projet Xcode "
#~ "au lieu de Makefiles Unix en "
#~ "utilisant le paramètre -G Xcode après"
#~ " CMake. Vous devrez d'abord sélectionner"
#~ " l'installation de Xcode dans le "
#~ "terminal si vous ne l'avez pas "
#~ "déjà fait."

#~ msgid ""
#~ "If `cmake` complains about Python 3 "
#~ "being missing, you may need to "
#~ "update your CMake binary with command"
#~ " `brew upgrade cmake`, or by "
#~ "downloading and running the latest CMake"
#~ " installer, depending on how you "
#~ "originally installed CMake."
#~ msgstr ""
#~ "Si cmake se plaint de l'absence de"
#~ " Python 3, vous devrez peut-être "
#~ "mettre à jour votre binaire CMake "
#~ "avec la commande `brew upgrade cmake`,"
#~ " ou en téléchargeant et en exécutant"
#~ " le dernier installateur CMake, selon "
#~ "la façon dont vous avez installé "
#~ "CMake à l'origine."

#~ msgid ""
#~ "After running CMake, you will have "
#~ "the make files or Xcode project "
#~ "file necessary to build all of the"
#~ " components. Open the hifi.xcodeproj file,"
#~ " choose ALL_BUILD from the Product >"
#~ " Scheme menu (or target drop down),"
#~ " and click Run."
#~ msgstr ""
#~ "Après avoir lancé CMake, vous aurez "
#~ "les fichiers make ou le fichier de"
#~ " projet Xcode nécessaires pour construire"
#~ " tous les composants. Ouvrez le "
#~ "fichier hifi.xcodeproj, choisissez ALL_BUILD "
#~ "dans le menu Product > Scheme (ou"
#~ " le menu déroulant target), et "
#~ "cliquez sur Run."

#~ msgid ""
#~ "If the build completes successfully, you"
#~ " will have built targets for all "
#~ "components located in the "
#~ "`build/${target_name}/Debug` directories."
#~ msgstr ""
#~ "Si la compilation se termine avec "
#~ "succès, vous aurez compilé des cibles"
#~ " pour tous les composants situés dans"
#~ " les répertoires build/${target_name}/Debug."

#~ msgid "make"
#~ msgstr "make"

#~ msgid ""
#~ "If you build with make rather than"
#~ " Xcode, you can append `-j4` for "
#~ "assigning more threads. The number "
#~ "indicates the number of threads, e.g."
#~ " 4."
#~ msgstr ""
#~ "Si vous compilez avec make plutôt "
#~ "qu'avec Xcode, vous pouvez ajouter -j4"
#~ " pour affecter plus de threads. Le"
#~ " chiffre indique le nombre de "
#~ "threads, par exemple 4."

#~ msgid ""
#~ "To package the installation, you can "
#~ "simply run `make package` afterwards."
#~ msgstr ""
#~ "Pour empaqueter l'installation, vous pouvez"
#~ " simplement exécutez make package par "
#~ "la suite."

#~ msgid "FAQ"
#~ msgstr "FAQ"

#~ msgid ""
#~ "**Problem:** Running the scheme "
#~ "`interface.app` from Xcode causes a "
#~ "crash for Interface related to `libgl`"
#~ msgstr ""
#~ "Problème : L'exécution du schéma "
#~ "interface.app à partir de Xcode provoque"
#~ " un plantage pour l'interface liée à"
#~ " libgl"

#~ msgid ""
#~ "**Cause:** The target `gl` generates a"
#~ " binary called `libgl`. A macOS "
#~ "`libGL.framework` item gets loaded instead "
#~ "by Xcode."
#~ msgstr ""
#~ "Cause : La cible gl génère un "
#~ "binaire appelé libgl. Un élément macOS"
#~ " libGL.framework est chargé à la "
#~ "place par Xcode."

#~ msgid ""
#~ "**Solution:** In the Xcode target "
#~ "settings for `libgl`, set the version"
#~ " to 1.0.0"
#~ msgstr ""
#~ "Solution : Dans les paramètres de "
#~ "la cible Xcode pour libgl, mettez "
#~ "la version à 1.0.0"

#~ msgid "*Last Updated on 15 Apr 2021*"
#~ msgstr "Dernière mise à jour le 17 mai 2020"

#~ msgid ""
#~ "This is a stand-alone guide for"
#~ " creating your first Vircadia build "
#~ "for Windows 64-bit."
#~ msgstr ""
#~ "Ceci est un guide autonome pour la"
#~ " création de votre première version "
#~ "de Vircadia pour Windows 64 bits."

#~ msgid ""
#~ "Note: We are now using Visual "
#~ "Studio 2019 and Qt 5.15.2. If you"
#~ " are upgrading from previous versions, "
#~ "do a clean uninstall of those "
#~ "versions before going through this "
#~ "guide."
#~ msgstr ""
#~ "Remarque : nous utilisons actuellement "
#~ "Visual Studio 2017 ou 2019 et Qt"
#~ " 5.12.3.<br />Si vous effectuez une "
#~ "mise à niveau à partir de versions"
#~ " précédentes, effectuez une désinstallation "
#~ "propre de ces versions avant de "
#~ "parcourir ce guide."

#~ msgid ""
#~ "**Note: The prerequisites will require "
#~ "about 10 GB of space on your "
#~ "drive. You will also need a system"
#~ " with at least 8GB of main "
#~ "memory.**"
#~ msgstr ""
#~ "**Note : Les prérequis nécessiteront "
#~ "environ 10 Go d'espace sur votre "
#~ "disque. Vous aurez également besoin d'un"
#~ " système avec au moins 8 Go de"
#~ " mémoire principale.**"

#~ msgid "Step 1. Visual Studio & Python 3.x"
#~ msgstr "Étape 1. Visual Studio & Python 3.x"

#~ msgid ""
#~ "If you don't have Community or "
#~ "Professional edition of Visual Studio "
#~ "2019, download [Visual Studio Community "
#~ "2019](https://visualstudio.microsoft.com/vs/). If you "
#~ "have Visual Studio 2017, you need "
#~ "to download Visual Studio 2019."
#~ msgstr ""

#~ msgid "When selecting components, check \"Desktop development with C++\"."
#~ msgstr ""
#~ "Lors de la sélection des composants, "
#~ "cochez \"Desktop development with C++\". "
#~ "À droite sur la barre d'outils "
#~ "Summary, sélectionnez les composants suivants."

#~ msgid ""
#~ "If you do not already have a "
#~ "Python 3.x development environment installed"
#~ " and want to install it with "
#~ "Visual Studio, check \"Python Development\"."
#~ " If you already have Visual Studio"
#~ " installed and need to add Python,"
#~ " open the \"Add or remove programs\""
#~ " control panel and find the "
#~ "\"Microsoft Visual Studio Installer\". Select"
#~ " it and click \"Modify\". In the "
#~ "installer, select \"Modify\" again, then "
#~ "check \"Python Development\" and allow "
#~ "the installer to apply the changes."
#~ msgstr ""

#~ msgid "Visual Studio 2019"
#~ msgstr "Visual Studio"

#~ msgid "On the right on the Summary toolbar, select the following components."
#~ msgstr ""

#~ msgid "MSVC v142 - VS 2019 C++ X64/x86 build tools"
#~ msgstr "MSVC v141 - VS 2017 C++ x64/x86 build tools"

#~ msgid "MSVC v141 - VS 2017 C++ x64/x86 build tools"
#~ msgstr "MSVC v141 - VS 2017 C++ x64/x86 build tools"

#~ msgid "MSVC v140 - VS 2015 C++ build tools (v14.00)"
#~ msgstr "MSVC v140 - VS 2015 C++ build tools (v14.00)"

#~ msgid "Step 1a. Alternate Python"
#~ msgstr "Étape 1a. Alternate Python"

#~ msgid ""
#~ "If you do not wish to use "
#~ "the Python installation bundled with "
#~ "Visual Studio, you can download the "
#~ "installer from [here](https://www.python.org/downloads/)."
#~ " Ensure that you get version 3.6.6"
#~ " or higher."
#~ msgstr ""
#~ "Si vous ne souhaitez pas utiliser "
#~ "l'installation Python fournie avec Visual "
#~ "Studio, vous pouvez télécharger l'installateur"
#~ " ici. Assurez-vous d'obtenir la "
#~ "version 3.6.6 ou supérieure."

#~ msgid "Step 2. Python Dependencies"
#~ msgstr "Étape 2. Dépendances de Python"

#~ msgid ""
#~ "In an administrator command-line that"
#~ " can access Python's pip you will "
#~ "need to run the following command:"
#~ msgstr ""
#~ "Dans une ligne de commande qui "
#~ "peut accéder au pip de Python, "
#~ "vous devrez exécuter la commande "
#~ "suivante :"

#~ msgid "`pip install distro`"
#~ msgstr "pip install distro"

#~ msgid "If you do not use an administrator command-line, you will get errors."
#~ msgstr ""

#~ msgid "Step 3. Installing CMake"
#~ msgstr "Étape 3. Installation de CMake"

#~ msgid "Download and install the latest version of CMake 3.15."
#~ msgstr "Téléchargez et installez la dernière version de CMake 3.15."

#~ msgid ""
#~ "Note that earlier versions of CMake "
#~ "will work, but there is a specific"
#~ " bug related to the interaction of"
#~ " Visual Studio 2019 and CMake "
#~ "versions prior to 3.15 that will "
#~ "cause Visual Studio to rebuild far "
#~ "more than it needs to on every "
#~ "build"
#~ msgstr ""
#~ "Notez que les versions antérieures de"
#~ " CMake fonctionneront, mais il existe "
#~ "un bogue spécifique lié à l'interaction"
#~ " de Visual Studio 2019 et des "
#~ "versions de CMake antérieures à la "
#~ "version 3.15 qui fera que Visual "
#~ "Studio reconstruira beaucoup plus que "
#~ "nécessaire à chaque version"

#~ msgid ""
#~ "Download the file named win64-x64 "
#~ "Installer from the [CMake "
#~ "Website](https://cmake.org/download/). You can "
#~ "access the installer on this [3.15 "
#~ "Version page](https://cmake.org/files/v3.15/). During "
#~ "installation, make sure to check \"Add"
#~ " CMake to system PATH for all "
#~ "users\" when prompted."
#~ msgstr ""

#~ msgid "Step 4. Node.JS and NPM"
#~ msgstr ""

#~ msgid ""
#~ "Install version 10.15.0 LTS (or greater)"
#~ " of [Node.JS and "
#~ "NPM](<https://nodejs.org/en/download/>)."
#~ msgstr ""

#~ msgid "Step 5. (Optional) Install Qt"
#~ msgstr ""

#~ msgid ""
#~ "If you would like to compile Qt"
#~ " instead of using the precompiled "
#~ "package provided during CMake, you can"
#~ " do so now. Install version 5.12.3"
#~ " of [Qt](<https://www.qt.io/download-open-"
#~ "source>), as well as the following "
#~ "packages:"
#~ msgstr ""

#~ msgid "Qt 5.15.2"
#~ msgstr ""

#~ msgid "MSVC 2019 64-bit"
#~ msgstr ""

#~ msgid "Qt WebEngine"
#~ msgstr ""

#~ msgid "Qt Script (Deprecated)"
#~ msgstr ""

#~ msgid ""
#~ "For convenience, you may also want "
#~ "the \"Qt Debug Information\" and "
#~ "\"Sources\" packages."
#~ msgstr ""

#~ msgid ""
#~ "You'll need to create the environment"
#~ " variable that CMake uses to find "
#~ "your system's Qt install."
#~ msgstr ""

#~ msgid "To create this variable:"
#~ msgstr "Pour créer cette variable :"

#~ msgid ""
#~ "Navigate to 'Edit the System Environment"
#~ " Variables' through the Start menu."
#~ msgstr ""
#~ "Naviguez sur 'Edit the System "
#~ "Environment Variables' via le menu de"
#~ " démarrage."

#~ msgid "Click on 'Environment Variables'"
#~ msgstr "Cliquez sur 'Environment Variables'"

#~ msgid "Select 'New'"
#~ msgstr "Sélectionnez 'New'"

#~ msgid "Set \"Variable name\" to `QT_CMAKE_PREFIX_PATH`"
#~ msgstr ""

#~ msgid ""
#~ "Set \"Variable value\" to "
#~ "`%QT_INSTALL_DIR%\\5.15.2\\msvc2019_64\\lib\\cmake`, where "
#~ "`%QT_INSTALL_DIR%` is the directory you "
#~ "specified for Qt's installation. The "
#~ "default is `C:\\Qt`."
#~ msgstr ""

#~ msgid "Step 6. Create VCPKG environment variable"
#~ msgstr "Étape 4. Créer une variable d'environnement VCPKG"

#~ msgid ""
#~ "In the next step, you will use "
#~ "CMake to build Vircadia. By default, "
#~ "the CMake process builds dependency "
#~ "files in Windows' `%TEMP%` directory, "
#~ "which is periodically cleared by the "
#~ "operating system. To prevent you from"
#~ " having to re-build the dependencies"
#~ " in the event that Windows clears "
#~ "that directory, we recommend that you"
#~ " create a `HIFI_VCPKG_BASE` environment "
#~ "variable linked to a directory somewhere"
#~ " on your machine. That directory will"
#~ " contain all dependency files until "
#~ "you manually remove them."
#~ msgstr ""
#~ "Dans l'étape suivante, vous utiliserez "
#~ "CMake pour compiler Vircadia. Par "
#~ "défaut, le processus CMake complie les"
#~ " fichiers de dépendance dans le "
#~ "répertoire %TEMP% de Windows, qui est"
#~ " périodiquement effacé par le système "
#~ "d'exploitation. Pour vous éviter d'avoir "
#~ "à recréer les dépendances dans le "
#~ "cas où Windows efface ce répertoire, "
#~ "nous vous recommandons de créer une "
#~ "variable d'environnement HIFI_VCPKG_BASE liée "
#~ "à un répertoire quelque part sur "
#~ "votre machine. Ce répertoire contiendra "
#~ "tous les fichiers de dépendances jusqu'à"
#~ " ce que vous les supprimiez "
#~ "manuellement."

#~ msgid ""
#~ "Navigate to 'Edit the System Environment"
#~ " Variables' Through the Start menu."
#~ msgstr ""
#~ "Naviguez sur 'Edit the System "
#~ "Environment Variables' via le menu de"
#~ " démarrage."

#~ msgid "Set \"Variable name\" to `HIFI_VCPKG_BASE`"
#~ msgstr ""

#~ msgid "Set \"Variable value\" to any directory that you have control over."
#~ msgstr "Mettez \"Variable value\" sur un répertoire dont vous avez le contrôle."

#~ msgid ""
#~ "Additionally, if you have Visual Studio"
#~ " 2019 installed and _only_ Visual "
#~ "Studio 2019 (i.e., you do not have"
#~ " Visual Studio 2017 installed) you "
#~ "must add an additional environment "
#~ "variable `HIFI_VCPKG_BOOTSTRAP` that will fix"
#~ " a bug in our `vcpkg` pre-build"
#~ " step."
#~ msgstr ""
#~ "En outre, si vous avez installé "
#~ "Visual Studio 2019 et seulement Visual"
#~ " Studio 2019 (c'est-à-dire que vous "
#~ "n'avez pas installé Visual Studio 2017),"
#~ " vous devez ajouter une variable "
#~ "d'environnement supplémentaire HIFI_VCPKG_BOOTSTRAP "
#~ "qui corrigera un bogue dans notre "
#~ "étape de précompilation vcpkg."

#~ msgid "Set \"Variable name\" to `HIFI_VCPKG_BOOTSTRAP`"
#~ msgstr ""

#~ msgid "Set \"Variable value\" to `1`"
#~ msgstr "Mettez \"Variable value\" sur 1"

#~ msgid "Step 7. Running CMake to Generate Build Files"
#~ msgstr "Étape 5. Exécution de CMake pour Générer les Fichiers de Compilation"

#~ msgid ""
#~ "Run Command Prompt from Start and "
#~ "run the following commands: `cd "
#~ "\"%VIRCADIA_DIR%\"` `mkdir build` `cd build`"
#~ msgstr ""
#~ "Démarrez Command Prompt depuis le menu"
#~ " Start et exécuter les commandes "
#~ "suivantes:<br />cd \"%VIRCADIA_DIR%\"<br />mkdir "
#~ "build<br />cd build"

#~ msgid "Run `cmake .. -G \"Visual Studio 16 2019\" -A x64`."
#~ msgstr "Exécutez cmake .. -G \"Visual Studio 16 2019\" -A x64."

#~ msgid "Where `%VIRCADIA_DIR%` is the directory for the Vircadia repository."
#~ msgstr "Où %VIRCADIA_DIR% est le répertoire du référentiel Vircadia."

#~ msgid "Step 8. Making a Build"
#~ msgstr "Étape 6. Création d'une Compilation"

#~ msgid "Open `%VIRCADIA_DIR%\\build\\vircadia.sln` using Visual Studio."
#~ msgstr "Ouvrez %VIRCADIA_DIR%\\build\\vircadia.sln en utilisant Visual Studio."

#~ msgid ""
#~ "Change the Solution Configuration (menu "
#~ "ribbon under the menu bar, next to"
#~ " the green play button) from "
#~ "\"Debug\" to \"Release\" for best "
#~ "performance."
#~ msgstr ""
#~ "Changez la Configuration de la Solution"
#~ " (ruban de menu sous la barre "
#~ "de menu, à côté du bouton vert "
#~ "de lecture) de \"Debug\" à \"Release\""
#~ " pour une meilleure performance."

#~ msgid "Run from the menu bar `Build > Build Solution`."
#~ msgstr "Exécutez à partir de la barre de menu Build > Build Solution."

#~ msgid "Step 9. Testing Interface"
#~ msgstr "Étape 7. Tester l'Interface"

#~ msgid "Create another environment variable (see Step #3)"
#~ msgstr "Créez une autre variable d'environnement (voir l'étape 3)"

#~ msgid "Set \"Variable name\": `_NO_DEBUG_HEAP`"
#~ msgstr "Définissez \"Variable name\" : NO_DEBUG_HEAP"

#~ msgid "Set \"Variable value\": `1`"
#~ msgstr "Mettez \"Variable value\" : 1"

#~ msgid "Restart Visual Studio again."
#~ msgstr "Redémarrez Visual Studio."

#~ msgid ""
#~ "In Visual Studio, right-click "
#~ "\"interface\" under the Apps folder in"
#~ " Solution Explorer and select \"Set "
#~ "as Startup Project\". Run from the "
#~ "menu bar `Debug > Start Debugging`."
#~ msgstr ""
#~ "Dans Visual Studio, faites un clic "
#~ "droit sur \"interface\" sous le dossier"
#~ " Apps dans l'explorateur de solutions "
#~ "et sélectionnez \"Set as Startup "
#~ "Project\". Exécutez à partir de la "
#~ "barre de menu Debug > Start "
#~ "Debugging."

#~ msgid ""
#~ "Now, you should have a full build"
#~ " of Vircadia and be able to run"
#~ " the Interface using Visual Studio."
#~ msgstr ""
#~ "Maintenant, vous devriez avoir une "
#~ "version complète de Vircadia et être "
#~ "capable d'exécuter l'Interface en utilisant"
#~ " Visual Studio."

#~ msgid ""
#~ "Note: You can also run Interface "
#~ "by launching it from command line "
#~ "or File Explorer from "
#~ "`%VIRCADIA_DIR%\\build\\interface\\Release\\interface.exe`"
#~ msgstr ""
#~ "Note : Vous pouvez également exécuter"
#~ " Interface en la lançant en ligne "
#~ "de commande ou l'explorateur de fichiers"
#~ " à partir de "
#~ "%VIRCADIA_DIR%\\build\\interface\\Release\\interface.exe"

#~ msgid "For any problems after Step #7, first try this:"
#~ msgstr "Pour tout problème après l'étape 6, essayez d'abord ceci :"

#~ msgid "Delete your locally cloned copy of the Vircadia repository"
#~ msgstr "Supprimez votre copie clonée localement du référentiel Vircadia"

#~ msgid "Restart your computer"
#~ msgstr "Redémarrez votre ordinateur"

#~ msgid "Redownload the [repository](https://github.com/vircadia/vircadia)"
#~ msgstr "Téléchargez [repository](https://github.com/vircadia/vircadia)"

#~ msgid "Restart directions from Step #7"
#~ msgstr "Reprennez les instructions depuis l'étape 6"

#~ msgid "CMake gives you the same error message repeatedly after the build fails"
#~ msgstr ""
#~ "CMake vous donne le même message "
#~ "d'erreur à plusieurs reprises après "
#~ "l'échouement de la compilation"

#~ msgid "Remove `CMakeCache.txt` found in the `%VIRCADIA_DIR%\\build` directory."
#~ msgstr ""
#~ "Supprimez CMakeCache.txt qui se trouve "
#~ "dans le répertoire %VIRCADIA_DIR%\\build."

#~ msgid "CMake can't find OpenSSL"
#~ msgstr "CMake ne trouve pas OpenSSL"

#~ msgid ""
#~ "Remove `CMakeCache.txt` found in the "
#~ "`%VIRCADIA_DIR%\\build` directory.  Verify that "
#~ "your HIFI_VCPKG_BASE environment variable is"
#~ " set and pointing to the correct "
#~ "location. Verify that the file "
#~ "`${HIFI_VCPKG_BASE}/installed/x64-windows/include/openssl/ssl.h` "
#~ "exists."
#~ msgstr ""

#~ msgid "Environment Variables"
#~ msgstr "Variables d'Environnement"

#~ msgid "You can launch a domain-server with these parameters."
#~ msgstr "Vous pouvez lancer un serveur de domaine avec ces paramètres."

#~ msgid "ICE server address"
#~ msgstr "Adresse du serveur ICE"

#~ msgid "Domain server UUID"
#~ msgstr "Serveur de domaine UUID"

#~ msgid "Requests a temporary domain name"
#~ msgstr "Demande un nom de domaine temporaire"

#~ msgid "User config file path"
#~ msgstr "Chemin d'accès au fichier de configuration de l'utilisateur"

#~ msgid "Displays the PID of the parent process"
#~ msgstr "Affiche le NID de la procédure parentale"

#~ msgid ""
#~ "You can alter the Domain server's "
#~ "functionality using the following environment"
#~ " variables."
#~ msgstr ""
#~ "Vous pouvez modifier la fonctionnalité "
#~ "du serveur de domaine en utilisant "
#~ "les variables d'environnement suivantes."

#~ msgid "Override the default port for your Domain server."
#~ msgstr "Remplacez le port par défaut de votre serveur de domaine."

#~ msgid "Override the default DTLS port."
#~ msgstr "Remplacer le port par défaut de DTLS."

#~ msgid "Override the default HTTP port."
#~ msgstr "Remplacer le port HTTP par défaut."

#~ msgid "Override the default HTTPS port."
#~ msgstr "Remplacer le port HTTPS par défaut."

#~ msgid "Override the default statistics exporter port."
#~ msgstr "Remplacez le port par défaut de l'exportateur de statistiques."

#~ msgid "Override the default metadata exporter port."
#~ msgstr "Remplacez le port par défaut de l'exportateur de métadonnées."

#~ msgid "Installer Creation Guide"
#~ msgstr "Guide de Création de l'Installateur"

#~ msgid "This document is slightly outdated. FIXME: Mentions Sandbox"
#~ msgstr ""

#~ msgid "Creating an Installer"
#~ msgstr "Création d'un installateur"

#~ msgid ""
#~ "An installer for Interface and Sandbox"
#~ " can be generated. This installer is"
#~ " made with NSIS."
#~ msgstr ""
#~ "Un installateur pour l'Interface et "
#~ "Sandbox peut être généré. Cet "
#~ "installateur est réalisé avec NSIS."

#~ msgid "*Last Updated on June 16, 2021*"
#~ msgstr "Dernière mise à jour le 17 mai 2020"

#~ msgid ""
#~ "Follow the [build guide](../build/BUILD.md) to"
#~ " figure out how to build Vircadia "
#~ "for your platform."
#~ msgstr ""
#~ "Suivez le guide de compilation pour "
#~ "savoir comment compiler Vircadia pour "
#~ "votre plateforme."

#~ msgid ""
#~ "During generation, CMake should produce "
#~ "an `install` target and a `package` "
#~ "target."
#~ msgstr ""
#~ "Lors de la génération, CMake doit "
#~ "produire une cible d'installation et une"
#~ " cible d' empaquetage."

#~ msgid ""
#~ "The `install` target will copy the "
#~ "Vircadia targets and their dependencies "
#~ "to your `CMAKE_INSTALL_PREFIX`.   This "
#~ "variable is set by the `project(hifi)`"
#~ " command in `CMakeLists.txt` to `C:/Program"
#~ " Files/hifi` and stored in "
#~ "`build/CMakeCache.txt`"
#~ msgstr ""
#~ "La cible d'installation va copier les"
#~ " cibles Vircadia et leurs dépendances "
#~ "dans votre CMAKE_INSTALL_PREFIX.<br />Cette "
#~ "variable est définie par la commande "
#~ "project(hifi) dans CMakeLists.txt à C:/Program"
#~ " Files/hifi et stockée dans "
#~ "build/CMakeCache.txt"

#~ msgid "Packaging"
#~ msgstr "Empaquetage"

#~ msgid ""
#~ "To produce an installer, run the "
#~ "`package` target. However you will want"
#~ " to follow the steps specific to "
#~ "your platform below."
#~ msgstr ""
#~ "Pour produire un installateur, lancez la"
#~ " cible d' empaquetage. Cependant, vous "
#~ "devrez suivre les étapes spécifiques à"
#~ " votre plate-forme ci-dessous."

#~ msgid "Windows"
#~ msgstr "Windows"

#~ msgid "Prerequisites"
#~ msgstr "Conditions préalables"

#~ msgid ""
#~ "To produce an executable installer on"
#~ " Windows, the following are required:"
#~ msgstr ""
#~ "Pour produire un programme d'installation "
#~ "exécutable sous Windows, les éléments "
#~ "suivants sont nécessaires :"

#~ msgid "[7-zip](<https://www.7-zip.org/download.html>)"
#~ msgstr ""

#~ msgid ""
#~ "[Nullsoft Scriptable Install "
#~ "System](http://nsis.sourceforge.net/Download) - 3.04   "
#~ "Install using defaults (will install to"
#~ " `C:\\Program Files (x86)\\NSIS`)"
#~ msgstr ""
#~ "Nullsoft Scriptable Install System - "
#~ "3.04<br />Installation en utilisant les "
#~ "valeurs par défaut (installera dans "
#~ "C:\\Program Files (x86)\\NSIS)"

#~ msgid ""
#~ "[UAC Plug-in for "
#~ "Nullsoft](http://nsis.sourceforge.net/UAC_plug-in) - "
#~ "0.2.4c"
#~ msgstr ""

#~ msgid "Extract Zip"
#~ msgstr "Extrait Zip"

#~ msgid "Copy `UAC.nsh` to `C:\\Program Files (x86)\\NSIS\\Include\\`"
#~ msgstr "Copiez UAC.nsh dans C:\\Program Files (x86)\\NSIS\\Include\\"

#~ msgid ""
#~ "Copy `Plugins\\x86-ansi\\UAC.dll` to `C:\\Program"
#~ " Files (x86)\\NSIS\\Plugins\\x86-ansi\\`"
#~ msgstr ""
#~ "Copiez Plugins\\x86-ansi\\UAC.dll dans C:\\Program"
#~ " Files (x86)\\NSIS\\Plugins\\x86-ansi\\"

#~ msgid ""
#~ "Copy `Plugins\\x86-unicode\\UAC.dll` to `C:\\Program"
#~ " Files (x86)\\NSIS\\Plugins\\x86-unicode\\`"
#~ msgstr ""
#~ "Copiez Plugins\\x86-unicode\\UAC.dll dans "
#~ "C:\\Program Files (x86)\\NSIS\\Plugins\\x86-unicode\\"

#~ msgid ""
#~ "[nsProcess Plug-in for "
#~ "Nullsoft](http://nsis.sourceforge.net/NsProcess_plugin) - "
#~ "1.6 (use the link marked "
#~ "**nsProcess_1_6.7z**)"
#~ msgstr ""
#~ "nsProcess Plug-in for Nullsoft - "
#~ "1.6 (utilise le lien marqué "
#~ "nsProcess_1_6.7z)"

#~ msgid ""
#~ "Copy `Include\\nsProcess.nsh` to `C:\\Program "
#~ "Files (x86)\\NSIS\\Include\\`"
#~ msgstr ""
#~ "Copiez Include\\nsProcess.nsh dans C:\\Program "
#~ "Files (x86)\\NSIS\\Include\\"

#~ msgid ""
#~ "Copy `Plugins\\nsProcess.dll` to `C:\\Program "
#~ "Files (x86)\\NSIS\\Plugins\\x86-ansi\\`"
#~ msgstr ""
#~ "Copiez Plugins\\nsProcess.dll dans C:\\Program "
#~ "Files (x86)\\NSIS\\Plugins\\x86-ansi\\"

#~ msgid ""
#~ "Copy `Plugins\\nsProcessW.dll` to `C:\\Program "
#~ "Files (x86)\\NSIS\\Plugins\\x86-unicode\\`"
#~ msgstr ""
#~ "Copiez Plugins\\nsProcessW.dll dans C:\\Program "
#~ "Files (x86)\\NSIS\\Plugins\\x86-unicode\\"

#~ msgid ""
#~ "[InetC Plug-in for "
#~ "Nullsoft](http://nsis.sourceforge.net/Inetc_plug-in) - "
#~ "1.0"
#~ msgstr ""

#~ msgid ""
#~ "Copy `Plugin\\x86-ansi\\InetC.dll` to `C:\\Program"
#~ " Files (x86)\\NSIS\\Plugins\\x86-ansi\\`"
#~ msgstr ""
#~ "Copiez Plugin\\x86-ansi\\InetC.dll dans C:\\Program"
#~ " Files (x86)\\NSIS\\Plugins\\x86-ansi\\"

#~ msgid ""
#~ "Copy `Plugin\\x86-unicode\\InetC.dll` to "
#~ "`C:\\Program Files (x86)\\NSIS\\Plugins\\x86-unicode\\`"
#~ msgstr ""
#~ "Copiez Plugin\\x86-unicode\\InetC.dll dans "
#~ "C:\\Program Files (x86)\\NSIS\\Plugins\\x86-unicode\\"

#~ msgid ""
#~ "[NSISpcre Plug-in for "
#~ "Nullsoft](http://nsis.sourceforge.net/NSISpcre_plug-in) -"
#~ " 1.0"
#~ msgstr ""

#~ msgid "Copy `NSISpre.nsh` to `C:\\Program Files (x86)\\NSIS\\Include\\`"
#~ msgstr "Copiez NSISpre.nsh dans C:\\Program Files (x86)\\NSIS\\Include\\"

#~ msgid ""
#~ "Copy `NSISpre.dll` to `C:\\Program Files "
#~ "(x86)\\NSIS\\Plugins\\x86-ansi\\`"
#~ msgstr ""
#~ "Copiez NSISpre.dll dans C:\\Program Files "
#~ "(x86)\\NSIS\\Plugins\\x86-ansi\\"

#~ msgid ""
#~ "[nsisSlideshow Plug-in for "
#~ "Nullsoft](<http://wiz0u.free.fr/prog/nsisSlideshow/>) - "
#~ "1.7"
#~ msgstr ""

#~ msgid ""
#~ "Copy `bin\\nsisSlideshow.dll` to `C:\\Program "
#~ "Files (x86)\\NSIS\\Plugins\\x86-ansi\\`"
#~ msgstr ""
#~ "Copiez bin\\nsisSlideshow.dll dans C:\\Program "
#~ "Files (x86)\\NSIS\\Plugins\\x86-ansi\\"

#~ msgid ""
#~ "Copy `bin\\nsisSlideshowW.dll` to `C:\\Program "
#~ "Files (x86)\\NSIS\\Plugins\\x86-unicode\\`"
#~ msgstr ""
#~ "Copiez bin\\nsisSlideshowW.dll dans C:\\Program "
#~ "Files (x86)\\NSIS\\Plugins\\x86-unicode\\"

#~ msgid ""
#~ "[Nsisunz plug-in for "
#~ "Nullsoft](http://nsis.sourceforge.net/Nsisunz_plug-in)"
#~ msgstr ""

#~ msgid "Download both Zips and unzip"
#~ msgstr "Téléchargez les deux Zips et dézippez"

#~ msgid ""
#~ "Copy `nsisunz\\Release\\nsisunz.dll` to `C:\\Program"
#~ " Files (x86)\\NSIS\\Plugins\\x86-ansi\\`"
#~ msgstr ""
#~ "Copiez nsisunz\\Release\\nsisunz.dll dans "
#~ "C:\\Program Files (x86)\\NSIS\\Plugins\\x86-ansi\\"

#~ msgid ""
#~ "Copy `NSISunzU\\Plugin unicode\\nsisunz.dll` to "
#~ "`C:\\Program Files (x86)\\NSIS\\Plugins\\x86-unicode\\`"
#~ msgstr ""
#~ "Copiez NSISunzU\\Plugin unicode\\nsisunz.dll dans"
#~ " C:\\Program Files (x86)\\NSIS\\Plugins\\x86-unicode\\"

#~ msgid "[ApplicationID plug-in for Nullsoft]() - 1.0"
#~ msgstr "Plug-in ApplicationID pour Nullsoft - 1.0"

#~ msgid ""
#~ "Download [`Pre-built "
#~ "DLLs`](<https://github.com/connectiblutz/NSIS-"
#~ "ApplicationID/releases/download/1.1/NSIS-ApplicationID.zip>)"
#~ msgstr ""

#~ msgid ""
#~ "Copy `Release\\ApplicationID.dll` to `C:\\Program"
#~ " Files (x86)\\NSIS\\Plugins\\x86-ansi\\`"
#~ msgstr ""
#~ "Copiez Release\\ApplicationID.dll dans C:\\Program"
#~ " Files (x86)\\NSIS\\Plugins\\x86-ansi\\"

#~ msgid ""
#~ "Copy `ReleaseUnicode\\ApplicationID.dll` to "
#~ "`C:\\Program Files (x86)\\NSIS\\Plugins\\x86-unicode\\`"
#~ msgstr ""
#~ "Copiez ReleaseUnicode\\ApplicationID.dll dans "
#~ "C:\\Program Files (x86)\\NSIS\\Plugins\\x86-unicode\\"

#~ msgid "[Node.JS and NPM](<https://nodejs.org/en/download/>)"
#~ msgstr ""

#~ msgid "Install version 10.15.0 LTS (or greater)"
#~ msgstr "Installez la version 10.15.0 LTS"

#~ msgid "Code Signing (optional)"
#~ msgstr "Signature du Code (facultatif)"

#~ msgid ""
#~ "For code signing to work, you will"
#~ " need to set the `HF_PFX_FILE` and"
#~ " `HF_PFX_PASSPHRASE` environment variables to "
#~ "be present during CMake runtime and "
#~ "globally as we proceed to package "
#~ "the installer."
#~ msgstr ""
#~ "Pour que la signature de code "
#~ "fonctionne, vous devrez définir les "
#~ "variables d'environnement HF_PFX_FILE et "
#~ "HF_PFX_PASSPHRASE de manière à ce "
#~ "qu'elles soient présentes pendant l'exécution"
#~ " de CMake et globalement lorsque nous"
#~ " procédons à l'installation."

#~ msgid "Creating the Installer"
#~ msgstr "Création de l'Installateur"

#~ msgid "Perform a clean cmake from a new terminal."
#~ msgstr "Effectuez un cmake propre à partir d'un nouveau terminal."

#~ msgid ""
#~ "Open the `vircadia.sln` solution with "
#~ "elevated (administrator) permissions on Visual"
#~ " Studio and select the **Release** "
#~ "configuration."
#~ msgstr ""
#~ "Ouvrez la solution vircadia.sln avec des"
#~ " autorisations élevées (administrateur) pour "
#~ "Visual Studio et sélectionnez la "
#~ "configuration Release."

#~ msgid "Build the solution."
#~ msgstr "Compilez la solution."

#~ msgid ""
#~ "Build `packaged-server-console-npm-"
#~ "install` (found under **hidden/Server "
#~ "Console**)"
#~ msgstr ""
#~ "Compilez packaged-server-console-npm-"
#~ "install (se trouvant sous hidden/Server "
#~ "Console)"

#~ msgid ""
#~ "Build `packaged-server-console` (found "
#~ "under **Server Console**)   This will "
#~ "add 2 folders to `build\\server-"
#~ "console\\` -   `server-console-win32-x64` "
#~ "and `x64`"
#~ msgstr ""
#~ "Compilez packaged-server-console (trouvé "
#~ "sous Server Console)<br />Cela ajoutera "
#~ "2 dossiers à build\\server-console\\ "
#~ "-<br />server-console-win32-x64 et x64"

#~ msgid ""
#~ "Build CMakeTargets->PACKAGE    The installer "
#~ "is now available in "
#~ "`build\\_CPack_Packages\\win64\\NSIS`"
#~ msgstr ""
#~ "Compilez CMakeTargets->PACKAGE<br />L'installateur "
#~ "est maintenant disponible dans "
#~ "build\\_CPack_Packages\\win64\\NSIS"

#~ msgid "Create an MSIX Package"
#~ msgstr ""

#~ msgid "Get the 'MSIX Packaging Tool' from the Windows Store."
#~ msgstr ""

#~ msgid ""
#~ "Run the process to create a new"
#~ " MSIX package from an existing .exe"
#~ " or .msi installer. This process will"
#~ " allow you to install Vircadia with"
#~ " the usual installer, however it will"
#~ " monitor changes to the computer to"
#~ " replicate the functionality in the "
#~ "MSIX Package. Therefore, you will want"
#~ " to avoid doing anything else on "
#~ "your computer during this process."
#~ msgstr ""

#~ msgid "Be sure to select no shortcuts and install only the Vircadia Interface."
#~ msgstr ""

#~ msgid ""
#~ "When asked for \"Entry\" points, select"
#~ " only the Interface entry and not "
#~ "the uninstaller. This is because the "
#~ "MSIX package is uninstalled by Windows"
#~ " itself. If for some reason the "
#~ "uninstaller shows up anyway, you can "
#~ "edit the manifest to manually remove "
#~ "it from view even if the "
#~ "uninstaller is present in the package."
#~ " This is necessary to uplaod to "
#~ "the Windows Store."
#~ msgstr ""

#~ msgid ""
#~ "Once completed, you can sign the "
#~ "package with this application or with"
#~ " other tools such as 'MSIX Hero'. "
#~ "It must be signed with a local "
#~ "certificate to test, and with a "
#~ "proper certificate to distribute."
#~ msgstr ""

#~ msgid ""
#~ "If uploading to the Windows Store, "
#~ "you will have to ensure all your"
#~ " manifest info including publisher "
#~ "information matches what is registered "
#~ "with your Microsoft Developer account "
#~ "for Windows. You will see these "
#~ "errors and the expected values when "
#~ "validating it."
#~ msgstr ""

#~ msgid ""
#~ "**Problem:** Failure to open a file. "
#~ "```File: failed opening file "
#~ "\"\\FOLDERSHARE\\XYZSRelease\\...\\Credits.rtf\" Error in"
#~ " script "
#~ "\"C:\\TFS\\XYZProject\\Releases\\NullsoftInstaller\\XYZWin7Installer.nsi\""
#~ " on line 77 -- aborting creation "
#~ "process```"
#~ msgstr ""

#~ msgid ""
#~ "**Cause:** The complete path (current "
#~ "directory + relative path) has to "
#~ "be < 260 characters to any of "
#~ "the relevant files."
#~ msgstr ""
#~ "Cause : Le chemin complet (répertoire"
#~ " actuel + chemin relatif) doit "
#~ "comporter < 260 caractères pour tous "
#~ "les fichiers concernés."

#~ msgid ""
#~ "**Solution:** Move your build and "
#~ "packaging folder as high up in the"
#~ " drive as possible to prevent an "
#~ "overage."
#~ msgstr ""
#~ "Solution : Déplacez votre dossier de "
#~ "compilation et d'empaquetage aussi haut "
#~ "que possible dans le lecteur pour "
#~ "éviter un surnombre."

#~ msgid "MacOS"
#~ msgstr ""

#~ msgid ""
#~ "Ensure you have all the prerequisites"
#~ " fulfilled from the [MacOS Build "
#~ "Guide](../build/BUILD_OSX.md)."
#~ msgstr ""

#~ msgid "Perform a clean CMake in your build folder. e.g."
#~ msgstr ""

#~ msgid "Pick a method to build and package your release."
#~ msgstr ""

#~ msgid "Option A: Use Xcode GUI"
#~ msgstr ""

#~ msgid "Perform a Release build of ALL_BUILD"
#~ msgstr "Effectuez un Release build de ALL_BUILD"

#~ msgid ""
#~ "Perform a Release build of `packaged-"
#~ "server-console`    This will add a "
#~ "folder to `build\\server-console\\` -     "
#~ "Sandbox-darwin-x64"
#~ msgstr ""
#~ "Effectuez une compilation Release de "
#~ "packaged-server-console Cela ajoutera un"
#~ " dossier à build\\server-console\\ -<br "
#~ "/>Sandbox-darwin-x64"

#~ msgid ""
#~ "Perform a Release build of `package`"
#~ "    Installer is now available in "
#~ "`build/_CPack_Packages/Darwin/DragNDrop`"
#~ msgstr ""
#~ "Effectuez une compilation Release de "
#~ "package Installer est maintenant disponible"
#~ " dans `build/_CPack_Packages/Darwin/DragNDrop"

#~ msgid "Option B: Use Terminal"
#~ msgstr ""

#~ msgid "Navigate to your build folder with your terminal."
#~ msgstr ""

#~ msgid ""
#~ "`make -j4`, you can change the "
#~ "number to match the number of "
#~ "threads you would like to use."
#~ msgstr ""

#~ msgid "`make package` to create the package."
#~ msgstr ""

#~ msgid "Linux"
#~ msgstr "Système Linux"

#~ msgid "Server"
#~ msgstr "Serveur de domaine"

#~ msgid "Ubuntu 18.04 | .deb"
#~ msgstr "Ubuntu 18.04 cmake"

#~ msgid ""
#~ "Ensure you are using an Ubuntu "
#~ "18.04 system. There is no required "
#~ "minimum to the amount of CPU cores"
#~ " needed, however it's recommended that "
#~ "you use as many as you have "
#~ "available in order to have an "
#~ "efficient experience."
#~ msgstr ""

#~ msgid "Get and bootstrap Vircadia Builder."
#~ msgstr ""

#~ msgid "Run Vircadia Builder."
#~ msgstr ""

#~ msgid ""
#~ "If Vircadia Builder needed to install"
#~ " dependencies and asks you to run "
#~ "it again then do so. Otherwise, "
#~ "skip to the next step."
#~ msgstr ""

#~ msgid ""
#~ "Vircadia Builder will ask you to "
#~ "configure it to build the server. "
#~ "The values will be prefilled with "
#~ "defaults, the following steps will "
#~ "explain what they are and what you"
#~ " might want to put. *Advanced users:"
#~ " See [here](BUILD.md#possible-environment-"
#~ "variables) for possible environment variables"
#~ " and settings.*"
#~ msgstr ""

#~ msgid ""
#~ "This value is the Git repository "
#~ "of Vircadia. You can set this URL"
#~ " to your fork of the Vircadia "
#~ "repository if you need to."
#~ msgstr ""

#~ msgid ""
#~ "This value is the tag on the "
#~ "repository. If you would like to "
#~ "use a specific version of Vircadia, "
#~ "typically tags will be named like "
#~ "this: \"v2021.1.0-rc\""
#~ msgstr ""

#~ msgid ""
#~ "This value is the release type. "
#~ "For example, the options are "
#~ "`production`, `pr`, or `dev`. If you "
#~ "are making a build for yourself "
#~ "and others to use then use "
#~ "`production`."
#~ msgstr ""

#~ msgid ""
#~ "This value is the release version. "
#~ "Release numbers should be in a "
#~ "format of `YEAR-MAJORVERSION-MINORVERSION` "
#~ "which might look like this: `2021.1.0`."
#~ msgstr ""

#~ msgid ""
#~ "This value is the build number. We"
#~ " typically use the hash of the "
#~ "most recent commit on that Git tag"
#~ " which might look like this: "
#~ "`fd6973b`."
#~ msgstr ""

#~ msgid ""
#~ "This value is the directory that "
#~ "Vircadia will get installed to. You "
#~ "should leave this as the default "
#~ "value unless you are an advanced "
#~ "user."
#~ msgstr ""

#~ msgid ""
#~ "This value is the number of CPU"
#~ " cores that the Vircadia Builder will"
#~ " use to compile the Vircadia server."
#~ " By default it will use all "
#~ "cores available on your build server."
#~ " You should leave this as the "
#~ "default value it gives you for "
#~ "your build server."
#~ msgstr ""

#~ msgid ""
#~ "This value is the number of CPU"
#~ " cores that the Vircadia Builder will"
#~ " use to compile Qt5 (a required "
#~ "component for Vircadia). By default it"
#~ " will use all cores available on "
#~ "your build server. You should leave "
#~ "this as the default value it gives"
#~ " you for your build server."
#~ msgstr ""

#~ msgid ""
#~ "It will ask you if you would "
#~ "like to proceed with the specified "
#~ "values. If you're happy with the "
#~ "configuration, type `yes`, otherwise enter "
#~ "`no` and press enter to start "
#~ "over. You can press `Ctrl` + `C`"
#~ " simultaneously on your keyboard to "
#~ "exit."
#~ msgstr ""

#~ msgid ""
#~ "Vircadia Builder will now run, it "
#~ "may take a while. See this "
#~ "[table](https://github.com/vircadia/vircadia-builder#how-"
#~ "long-does-it-take) for estimated "
#~ "times."
#~ msgstr ""

#~ msgid "Navigate to the `pkg-scripts` directory."
#~ msgstr ""

#~ msgid ""
#~ "Generate the .rpm package. Set "
#~ "`RPMVERSION` to the same version you "
#~ "entered for the `Release number` on "
#~ "Vircadia Builder. *Advanced users: the "
#~ "version cannot begin with a letter "
#~ "and cannot include underscores or dashes"
#~ " in it.*"
#~ msgstr ""

#~ msgid ""
#~ "If successful, the generated .deb "
#~ "package will be in the `pkg-"
#~ "scripts` folder."
#~ msgstr ""

#~ msgid "Amazon Linux 2 | .rpm"
#~ msgstr ""

#~ msgid ""
#~ "Ensure you are using an Amazon "
#~ "Linux 2 system. You will need many"
#~ " CPU cores to complete this process"
#~ " within a reasonable time. As an "
#~ "alternative to AWS EC2, you may "
#~ "use a [virtual "
#~ "machine](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide"
#~ "/amazon-linux-2-virtual-machine.html). Here are"
#~ " the recommended specs:"
#~ msgstr ""

#~ msgid "Update the system and install dependencies."
#~ msgstr ""

#~ msgid ""
#~ "This value is the tag on the "
#~ "repository. If you would like to "
#~ "use a specific version of Vircadia, "
#~ "typically tags will be named like "
#~ "this: \"v2021.1.0-rc\"."
#~ msgstr ""

#~ msgid ""
#~ "This value is the release version. "
#~ "Release numbers typically should be in"
#~ " a format of `YEAR-MAJORVERSION-"
#~ "MINORVERSION` which might look like "
#~ "this: `2021.1.0`."
#~ msgstr ""

#~ msgid ""
#~ "This value is the number of CPU"
#~ " cores that the Vircadia Builder will"
#~ " use to compile the Vircadia server."
#~ " By default it will use all "
#~ "cores available on your build server "
#~ "given you have enough memory. You "
#~ "should leave this as the default "
#~ "value it gives you for your build"
#~ " server."
#~ msgstr ""

#~ msgid ""
#~ "This value is the number of CPU"
#~ " cores that the Vircadia Builder will"
#~ " use to compile Qt5 (a required "
#~ "component for Vircadia). By default it"
#~ " will use all cores available on "
#~ "your build server given you have "
#~ "enough memory. You should leave this "
#~ "as the default value it gives you"
#~ " for your build server."
#~ msgstr ""

#~ msgid ""
#~ "If successful, the generated .rpm "
#~ "package will be in the `pkg-"
#~ "scripts` folder of the Vircadia source"
#~ " files."
#~ msgstr ""

#~ msgid "Debugging"
#~ msgstr "Débogage"

#~ msgid "You can launch Interface with the following parameters."
#~ msgstr "Vous pouvez lancer Interface avec les paramètres suivants."

#~ msgid "Displays help dialog"
#~ msgstr "Affiche le dialogue d'aide"

#~ msgid "Start up at specified URL location"
#~ msgstr "Démarrage à l'emplacement URL spécifié"

#~ msgid "Displays the protocol version"
#~ msgstr "Affiche la version du protocole"

#~ msgid "Do not show the auto-updater"
#~ msgstr "Ne pas montrer la mise à jour automatique"

#~ msgid ""
#~ "Checks to see if the machine meets"
#~ " the minimum specification requirements."
#~ msgstr "Vérifie la conformité de la machine aux spécifications minimales."

#~ msgid "Whether to run the server"
#~ msgstr "Exécution ou non du serveur"

#~ msgid "Port to listen on. (Needs clarification!)"
#~ msgstr "Port à écouter. (Nécessite une clarification !)"

#~ msgid "Where to find server content"
#~ msgstr "Où trouver le contenu du serveur"

#~ msgid "Set cache location. Defaults to the operating system local data path."
#~ msgstr ""
#~ "Définit l'emplacement du cache. Par "
#~ "défaut, le chemin d'accès pour les "
#~ "données locales du système d'exploitation."

#~ msgid "Set path for defaultScripts."
#~ msgstr "Définit le chemin d'accès pour les scripts par défaut."

#~ msgid "Allow multiple instances of the interface to run simultaneously."
#~ msgstr ""
#~ "Permet à plusieurs instances de "
#~ "l'interface de s'exécuter simultanément."

#~ msgid "Preferred displays."
#~ msgstr "Affichages préférés."

#~ msgid ""
#~ "Disable display plugin. Possible devices "
#~ "include \"OpenVR (Vive)\", \"Oculus Rift\"."
#~ msgstr ""
#~ "Désactive le plugin d'affichage. Les "
#~ "périphériques possibles sont \"OpenVR "
#~ "(Vive)\", \"Oculus Rift\"."

#~ msgid ""
#~ "Disable input plugin. Possible devices "
#~ "include \"OpenVR (Vive)\", \"Oculus Rift\"."
#~ msgstr ""
#~ "Désactive le plugin d'entrée. Les "
#~ "périphériques possibles sont \"OpenVR "
#~ "(Vive)\", \"Oculus Rift\"."

#~ msgid "Suppress the prompt to reset interface settings"
#~ msgstr "Supprime l'invite à réinitialiser les paramètres de l'interface"

#~ msgid "Let the Oculus plugin know if Interface was run from the Oculus Store"
#~ msgstr ""
#~ "Fait savoir au plugin Oculus si "
#~ "l'interface a été exécutée à partir "
#~ "de l'Oculus Store"

#~ msgid "Emulate a standalone device"
#~ msgstr "Émule un appareil autonome"

#~ msgid "Disable the watchdog thread. The interface will crash on deadlocks."
#~ msgstr ""
#~ "Désactive le thread de garde. "
#~ "L'interface se plantera en cas de "
#~ "blocage."

#~ msgid "(Needs clarification!)"
#~ msgstr "(Nécessite une clarification !)"

#~ msgid ""
#~ "Maximum concurrent resource downloads. Default"
#~ " is 16, except for Android where "
#~ "it is 4."
#~ msgstr ""
#~ "Maximum de téléchargements de ressources "
#~ "simultanés. La valeur par défaut est "
#~ "de 16, sauf pour Android où elle"
#~ " est de 4."

#~ msgid "Override the avatar URL"
#~ msgstr "Remplace l'URL de l'avatar"

#~ msgid ""
#~ "Replaces the Avatar URL. If both "
#~ "this and --avatarURL is set, this "
#~ "one takes precedence."
#~ msgstr ""
#~ "Remplace l'URL de l'avatar. Si cette "
#~ "URL et --avatarURL sont toutes deux "
#~ "définies, celle-ci a la priorité."

#~ msgid ""
#~ "Bookmarks are expected to be in a"
#~ " name=url form. An `=` character in"
#~ " the name or url is unsupported."
#~ msgstr ""
#~ "Les signets doivent se présenter sous"
#~ " la forme name=url. Un caractère ="
#~ " dans le nom ou l'url n'est pas"
#~ " pris en charge."

#~ msgid "Disable level of detail auto config."
#~ msgstr "Désactive la configuration automatique du niveau de détail."

#~ msgid "Force enable crash reporting for the Interface."
#~ msgstr ""

#~ msgid "Debugging Tips"
#~ msgstr "Conseils de débogage"

#~ msgid "Visual Studio"
#~ msgstr "Visual Studio"

#~ msgid ""
#~ "To run Interface from Visual Studio "
#~ "with the debugger attached you need "
#~ "to set Interface as the startup "
#~ "project. To do this, in **Solution "
#~ "Explorer**, expand the \"Apps\" folder, "
#~ "right click **interface**, and select "
#~ "\"Set as Startup Project\". Now **Debug"
#~ " > Start Debugging** and the **Local"
#~ " Windows Debugger** button on the "
#~ "debug toolbar will start Interface."
#~ msgstr ""

#~ msgid ""
#~ "If you do not set the startup "
#~ "project to Interface, the debugger will"
#~ " try to start **ALL_BUILD** under the"
#~ " \"CMakeTargets\" folder, resulting in an"
#~ " \"Access is Denied\" error."
#~ msgstr ""
#~ "Si vous ne définissez pas le "
#~ "projet de démarrage comme Interface, le"
#~ " débogueur essaiera de lancer ALL_BUILD "
#~ "sous le dossier \"CMakeTargets\", ce qui"
#~ " entraînera une erreur \"Access is "
#~ "Denied\"."

#~ msgid ""
#~ "You can alter Interface's functionality "
#~ "using the following environment variables."
#~ msgstr ""
#~ "Vous pouvez modifier la fonctionnalité "
#~ "d'Interface en utilisant les variables "
#~ "d'environnement suivantes."

#~ msgid ""
#~ "Use the source files for QML and"
#~ " other resources at runtime instead "
#~ "of the compiled files."
#~ msgstr ""
#~ "Utilise les fichiers sources pour QML"
#~ " et d'autres ressources au moment de"
#~ " l'exécution au lieu des fichiers "
#~ "compilés."

#~ msgid ""
#~ "Enable the HMD debugging mode which "
#~ "emulates an HMD view in 2D for "
#~ "desktop testing."
#~ msgstr ""
#~ "Active le mode de débogage HMD qui"
#~ " émule une vue HMD en 2D pour"
#~ " les tests en mode Clavier."

#~ msgid ""
#~ "Enable the OpenVR plugin to be "
#~ "used with an Oculus HMD. (Useful "
#~ "for debugging the OpenVR plugin if "
#~ "you have an Oculus HMD but not "
#~ "a SteamVR HMD.)"
#~ msgstr ""
#~ "Active le plugin OpenVR pour qu'il "
#~ "soit utilisé avec un HMD Oculus. "
#~ "(Utile pour déboguer le plugin OpenVR"
#~ " si vous avez un HMD Oculus "
#~ "mais pas un HMD SteamVR)"

#~ msgid "Override the metaverse URL."
#~ msgstr "Remplace l'URL du métaverse."

#~ msgid "Allow multiple instances of Interface to run simultaneously."
#~ msgstr ""
#~ "Permet à plusieurs instances de "
#~ "l'Interface de s'exécuter simultanément."

#~ msgid "The Interface will have a custom default home and startup location."
#~ msgstr ""

#~ msgid ""
#~ "Logging to the console can be "
#~ "controlled with the `VIRCADIA_LOG_OPTIONS` "
#~ "variable. It can be set to any "
#~ "comma separated combination of the "
#~ "following options. Case and whitespace "
#~ "are not significant."
#~ msgstr ""
#~ "La connexion à la console peut "
#~ "être contrôlée avec la variable "
#~ "VIRCADIA_LOG_OPTIONS. Elle peut être "
#~ "configurée pour toute combinaison des "
#~ "options suivantes, séparées par des "
#~ "virgules. Les majuscules et les espaces"
#~ " ne sont pas significatifs."

#~ msgid "`color` - Force ANSI colors depending on the message's severity."
#~ msgstr "color - Force les couleurs ANSI en fonction de la gravité du message."

#~ msgid "`nocolor` - Force ANSI colors off."
#~ msgstr "nocolor - Désactive les couleurs ANSI."

#~ msgid "`milliseconds` - Log timestamps with millisecond precision."
#~ msgstr ""
#~ "milliseconds - Enregistre les horodatages "
#~ "avec une précision de l'ordre de "
#~ "la milliseconde."

#~ msgid "`process_id` - Log the process ID."
#~ msgstr "process_id - Enregistre l'ID du processus."

#~ msgid "`thread_id` - Log the thread ID."
#~ msgstr "thread_id - Enregistre l'ID du thread."

#~ msgid "For example:"
#~ msgstr "Par exemple :"

#~ msgid ""
#~ "This will cause logging with millisecond"
#~ " precision, and color coding messages "
#~ "by severity."
#~ msgstr ""
#~ "Ceci permet d'enregistrer avec une "
#~ "précision de l'ordre de la milliseconde"
#~ " et de coder les messages par "
#~ "couleur en fonction de leur gravité."

#~ msgid "Will result in only millisecond precision being applied to logging."
#~ msgstr ""
#~ "La précision de la journalisation sera"
#~ " alors de l'ordre de la milliseconde."

#~ msgid ""
#~ "Color is enabled by default on "
#~ "Unix if output is being directed "
#~ "to a terminal, and disabled by "
#~ "default on Windows."
#~ msgstr ""
#~ "La couleur est activée par défaut "
#~ "sous Unix si la sortie est dirigée"
#~ " vers un terminal, et désactivée par"
#~ " défaut sous Windows."

